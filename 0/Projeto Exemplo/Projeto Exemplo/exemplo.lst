


ARM Macro Assembler    Page 1 


    1 00000000         ; Exemplo.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 12/03/2018
    5 00000000         
    6 00000000         ; ------------------------------------------------------
                       -------------------------
    7 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000         ; Declarações EQU - Defines
   10 00000000         ;<NOME>         EQU <VALOR>
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         ; Área de Dados - Declarações de variáveis
   13 00000000                 AREA             DATA, ALIGN=2
   14 00000000         ; Se alguma variável for chamada em outro arquivo
   15 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   16 00000000         ; partir de outro arquivo
   17 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   18 00000000         ; de <tam> bytes a partir da primeira 
   19 00000000         ; posição da RAM  
   20 00000000         
   21 00000000         ; ------------------------------------------------------
                       -------------------------
   22 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   23 00000000         ;                  código
   24 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   25 00000000         
   26 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   27 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   28 00000000         ; outro arquivo. No caso startup.s
   29 00000000         
   30 00000000         ; Se chamar alguma função externa 
   31 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   32 00000000         ; função <func>
   33 00000000         
   34 00000000         ; ------------------------------------------------------
                       -------------------------
   35 00000000         ; Função main()
   36 00000000         
   37 00000000 20000400 
                       memInicio
                               EQU              0x20000400
   38 00000000 20000600 
                       memFim  EQU              0x20000600
   39 00000000         
   40 00000000         Start
   41 00000000         ; Comece o código aqui <================================
                       ======================



ARM Macro Assembler    Page 2 


   42 00000000         
   43 00000000 F8DF A0D4       LDR              R10, =memInicio ; ponteiro do l
                                                            oop externo
   44 00000004 F8DF C0D4       LDR              R12, =memFim
   45 00000008 F8BC 2000       LDRH             R2, [R12]
   46 0000000C F1AA 0A02       SUB              R10, R10, #2
   47 00000010 E008            B                loopExterno
   48 00000012         
   49 00000012         atualiza
   50 00000012 F8DA 4000       LDR              R4, [R10]
   51 00000016 F8DB 5000       LDR              R5, [R11]
   52 0000001A F8AB 4000       STRH             R4, [R11]
   53 0000001E F8AA 5000       STRH             R5, [R10]
   54 00000022 E011            B                loopInternoNext
   55 00000024         
   56 00000024         loopExterno
   57 00000024 F10A 0A02       ADD              R10, R10, #2
   58 00000028 F8BA 0000       LDRH             R0, [R10]
   59 0000002C 4290            CMP              R0, R2
   60 0000002E D00E            BEQ              fim
   61 00000030         
   62 00000030 F10A 0B02       ADD              R11, R10, #2
   63 00000034         
   64 00000034         loopInterno
   65 00000034 F8BB 1000       LDRH             R1, [R11]
   66 00000038 4291            CMP              R1, R2
   67 0000003A D0F3            BEQ              loopExterno
   68 0000003C         
   69 0000003C F8BA 0000       LDRH             R0, [R10]
   70 00000040 F8BB 1000       LDRH             R1, [R11]
   71 00000044 4288            CMP              R0, R1
   72 00000046 DCE4            BGT              atualiza
   73 00000048         
   74 00000048         loopInternoNext
   75 00000048 F10B 0B02       ADD              R11, R11, #2
   76 0000004C E7F2            B                loopInterno
   77 0000004E         
   78 0000004E         
   79 0000004E         
   80 0000004E         ; ============================================
   81 0000004E         
   82 0000004E         fim
   83 0000004E         
   84 0000004E         ; inicializa as variáveis
   85 0000004E F8DF A088       LDR              R10, =memInicio
   86 00000052 F8BA 0000       LDRH             R0, [R10]
   87 00000056 F04F 0301       MOV              R3, #1
   88 0000005A F04F 0404       MOV              R4, #4      ; razao
   89 0000005E F8DF B080       LDR              R11, =0x20000608
   90 00000062 F82B 0B14       STRH             R0, [R11], #20 ; primeiro termo
                                                            
   91 00000066 F82B 0B14       STRH             R0, [R11], #20 ; primeiro termo
                                                             auxiliar
   92 0000006A F82B 3B14       STRH             R3, [R11], #20 ; tamanho da mai
                                                            or sequencia
   93 0000006E F82B 3B14       STRH             R3, [R11], #20 ; tamanho da mai
                                                            or sequencia auxili
                                                            ar
   94 00000072 F82B 4B14       STRH             R4, [R11], #20 ; armazena a raz



ARM Macro Assembler    Page 3 


                                                            ao da maior sequenc
                                                            ia
   95 00000076 4818            LDR              R0, =memInicio ; ponteiro do in
                                                            icio da lista
   96 00000078 4601            MOV              R1, R0      ; ponteiro do proxi
                                                            mo elemento da list
                                                            a
   97 0000007A E002            B                inicio
   98 0000007C         
   99 0000007C         atualizaPilha
  100 0000007C F84D BD04       PUSH             {R11}
  101 00000080 E7FF            B                inicio
  102 00000082         ;B atualizarSeqAux
  103 00000082         
  104 00000082         
  105 00000082         
  106 00000082         inicio
  107 00000082 F8B0 A000       LDRH             R10, [R0]   ; conteudo de R10
  108 00000086 F101 0102       ADD              R1, R1, #2  ; atualiza o pontei
                                                            ro de R1 
  109 0000008A F8B1 B000       LDRH             R11, [R1]
  110 0000008E F1BB 0F00       CMP              R11, #0
  111 00000092 D009            BEQ              atualizaPonteiroIncio
  112 00000094         
  113 00000094         
  114 00000094 FBBB F3FA       UDIV             R3, R11, R10
  115 00000098 FB03 B41A       MLS              R4, R3, R10, R11
  116 0000009C 2C00            CMP              R4, #0      ; se R4 == 0, ent é
                                                             inteiro
  117 0000009E D000            BEQ              verificaRazao
  118 000000A0 E7EF            B                inicio
  119 000000A2         ;CMP R4, #4
  120 000000A2         
  121 000000A2         verificaRazao
  122 000000A2 2B04            CMP              R3, #4
  123 000000A4 D0EA            BEQ              atualizaPilha
  124 000000A6 E7EC            B                inicio
  125 000000A8         
  126 000000A8         atualizaPonteiroIncio
  127 000000A8 F100 0002       ADD              R0, R0, #2
  128 000000AC 4601            MOV              R1, R0
  129 000000AE F8B0 A000       LDRH             R10, [R0]
  130 000000B2 F1BA 0F00       CMP              R10, #0
  131 000000B6 D000            BEQ              fimPG
  132 000000B8 E7E3            B                inicio
  133 000000BA         
  134 000000BA         fimPG
  135 000000BA         
  136 000000BA 4808            LDR              R0, =memFim
  137 000000BC 4F06            LDR              R7, =memInicio
  138 000000BE F107 0704       ADD              R7, R7, #4
  139 000000C2 F1A0 0002       SUB              R0, R0, #2
  140 000000C6         
  141 000000C6         salvarPG
  142 000000C6         
  143 000000C6 BC02            POP              {R1}
  144 000000C8         
  145 000000C8 45BD            CMP              R13, R7
  146 000000CA D003            BEQ              acabou



ARM Macro Assembler    Page 4 


  147 000000CC         
  148 000000CC F100 0002       ADD              R0, R0, #2
  149 000000D0 8001            STRH             R1, [R0]
  150 000000D2 E7F8            B                salvarPG
  151 000000D4         
  152 000000D4         acabou
  153 000000D4         
  154 000000D4         
  155 000000D4         
  156 000000D4         
  157 000000D4         
  158 000000D4         
  159 000000D4         
  160 000000D4         ; R10 = elemento atual (a[i])
  161 000000D4         ; R11 = elemento seguinte (a[i+1])
  162 000000D4         
  163 000000D4         ;LDRH R0, [R11]        ; b = a[i+1]
  164 000000D4         ;LDRH R1, [R10]        ; a = a[i]
  165 000000D4         ;UDIV R3, R0, R1       ; r = b / a
  166 000000D4         ;MLS  R4, R3, R1, R0   ; resto = b - r*a
  167 000000D4         ;CMP  R4, #0
  168 000000D4         ;BNE proximoDivisor    ; se resto != 0, não é divisor vá
                       lido
  169 000000D4         
  170 000000D4 BF00            NOP
  171 000000D6 00 00           ALIGN                        ; garante que o fim
                                                             da seção está alin
                                                            hada 
  172 000000D8                 END                          ; fim do arquivo
              20000400 
              20000600 
              20000608 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\exemplo.d -o.\exemplo.o -IC:\Users\Usuário\AppData\Local\A
rm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL SETA 1"
 --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SETA 1" --
list=.\exemplo.lst exemplo.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 13 in file exemplo.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 24 in file exemplo.s
   Uses
      None
Comment: .text unused
Start 00000000

Symbol: Start
   Definitions
      At line 40 in file exemplo.s
   Uses
      At line 27 in file exemplo.s
Comment: Start used once
acabou 000000D4

Symbol: acabou
   Definitions
      At line 152 in file exemplo.s
   Uses
      At line 146 in file exemplo.s
Comment: acabou used once
atualiza 00000012

Symbol: atualiza
   Definitions
      At line 49 in file exemplo.s
   Uses
      At line 72 in file exemplo.s
Comment: atualiza used once
atualizaPilha 0000007C

Symbol: atualizaPilha
   Definitions
      At line 99 in file exemplo.s
   Uses
      At line 123 in file exemplo.s
Comment: atualizaPilha used once
atualizaPonteiroIncio 000000A8

Symbol: atualizaPonteiroIncio
   Definitions
      At line 126 in file exemplo.s
   Uses
      At line 111 in file exemplo.s
Comment: atualizaPonteiroIncio used once
fim 0000004E

Symbol: fim
   Definitions
      At line 82 in file exemplo.s
   Uses
      At line 60 in file exemplo.s
Comment: fim used once
fimPG 000000BA

Symbol: fimPG



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 134 in file exemplo.s
   Uses
      At line 131 in file exemplo.s
Comment: fimPG used once
inicio 00000082

Symbol: inicio
   Definitions
      At line 106 in file exemplo.s
   Uses
      At line 97 in file exemplo.s
      At line 101 in file exemplo.s
      At line 118 in file exemplo.s
      At line 124 in file exemplo.s
      At line 132 in file exemplo.s

loopExterno 00000024

Symbol: loopExterno
   Definitions
      At line 56 in file exemplo.s
   Uses
      At line 47 in file exemplo.s
      At line 67 in file exemplo.s

loopInterno 00000034

Symbol: loopInterno
   Definitions
      At line 64 in file exemplo.s
   Uses
      At line 76 in file exemplo.s
Comment: loopInterno used once
loopInternoNext 00000048

Symbol: loopInternoNext
   Definitions
      At line 74 in file exemplo.s
   Uses
      At line 54 in file exemplo.s
Comment: loopInternoNext used once
salvarPG 000000C6

Symbol: salvarPG
   Definitions
      At line 141 in file exemplo.s
   Uses
      At line 150 in file exemplo.s
Comment: salvarPG used once
verificaRazao 000000A2

Symbol: verificaRazao
   Definitions
      At line 121 in file exemplo.s
   Uses
      At line 117 in file exemplo.s
Comment: verificaRazao used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

memFim 20000600

Symbol: memFim
   Definitions
      At line 38 in file exemplo.s
   Uses
      At line 44 in file exemplo.s
      At line 136 in file exemplo.s

memInicio 20000400

Symbol: memInicio
   Definitions
      At line 37 in file exemplo.s
   Uses
      At line 43 in file exemplo.s
      At line 85 in file exemplo.s
      At line 95 in file exemplo.s
      At line 137 in file exemplo.s

2 symbols
353 symbols in table
