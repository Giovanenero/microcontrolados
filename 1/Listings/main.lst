


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 24/08/2020
    5 00000000         ; Este programa espera o usuário apertar a chave USR_SW1
                       .
    6 00000000         ; Caso o usuário pressione a chave, o LED1 piscará a cad
                       a 0,5 segundo.
    7 00000000         
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   10 00000000         ; ------------------------------------------------------
                       -------------------------
   11 00000000         
   12 00000000         ; Declarações EQU - Defines
   13 00000000         ;<NOME>         EQU <VALOR>
   14 00000000         ; ========================
   15 00000000         
   16 00000000         ; ------------------------------------------------------
                       -------------------------
   17 00000000         ; Área de Dados - Declarações de variáveis
   18 00000000                 AREA             DATA, ALIGN=2
   19 00000000         ; Se alguma variável for chamada em outro arquivo
   20 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   21 00000000         ; partir de outro arquivo
   22 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   23 00000000         ; de <tam> bytes a partir da primeira 
   24 00000000         ; posição da RAM  
   25 00000000         
   26 00000000         ; ------------------------------------------------------
                       -------------------------
   27 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   28 00000000         ;                  código
   29 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   30 00000000         
   31 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   32 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   33 00000000         ; outro arquivo. No caso startup.s
   34 00000000         
   35 00000000         ; Se chamar alguma função externa 
   36 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   37 00000000         ; função <func>
   38 00000000                 IMPORT           PLL_Init
   39 00000000                 IMPORT           SysTick_Init
   40 00000000                 IMPORT           SysTick_Wait1ms
   41 00000000                 IMPORT           GPIO_Init
   42 00000000                 IMPORT           PortN_Output
   43 00000000                 IMPORT           PortJ_Input
   44 00000000         



ARM Macro Assembler    Page 2 


   45 00000000         
   46 00000000         ; ------------------------------------------------------
                       -------------------------
   47 00000000         ; Função main()
   48 00000000         Start
   49 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   50 00000004 F7FF FFFE       BL               SysTick_Init
   51 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   52 0000000C         
   53 0000000C         
   54 0000000C         MainLoop
   55 0000000C F7FF FFFE       BL               PortJ_Input ;Chama a subrotina 
                                                            que lê o estado das
                                                             chaves e coloca o 
                                                            resultado em R0
   56 00000010         ; SW1 PRESSIONADA = 10 == 0x02
   57 00000010         ; SW2 PRESSIODADA = 01 = 0x01
   58 00000010         ; AMBAS PRESSIONADAS = 00 == 0x00
   59 00000010         ; NENHUMA PRESSIONADA = 11 == 0x03
   60 00000010         
   61 00000010         Verifica_Nenhuma
   62 00000010 2803            CMP              R0, #2_00000011 ;Verifica se ne
                                                            nhuma chave está pr
                                                            essionada
   63 00000012 D102            BNE              Verifica_SW1 ;Se o teste viu qu
                                                            e tem pelo menos al
                                                            guma chave pression
                                                            ada pula
   64 00000014 F000 F820       BL               ApagaLeds
   65 00000018         ;MOV R0, #0                   ;Não acender nenhum LED
   66 00000018         ;BL PortN_Output      ;Chamar a função para não acender 
                       nenhum LED
   67 00000018 E7F8            B                MainLoop    ;Se o teste viu que
                                                             nenhuma chave está
                                                             pressionada, volta
                                                             para o laço princi
                                                            pal
   68 0000001A         
   69 0000001A         Verifica_SW1
   70 0000001A 2802            CMP              R0, #2_00000010 ;Verifica se so
                                                            mente a chave SW1 e
                                                            stá pressionada
   71 0000001C D1F6            BNE              MainLoop    ;Se o teste falhou,
                                                             volta para o iníci
                                                            o do laço principal
                                                            
   72 0000001E         ; BL Pisca_LED     ;Chama a rotina para piscar LED
   73 0000001E         ;MOV R0, #2_00000011    ;Setar o parâmetro de entrada da
                        função como o BIT4
   74 0000001E         ;BL PortN_Output 
   75 0000001E F000 F803       BL               AcendeLed1
   76 00000022 F000 F821       BL               Espera1Segundo
   77 00000026         
   78 00000026 E7F1            B                MainLoop    ;Volta para o laço 



ARM Macro Assembler    Page 3 


                                                            principal
   79 00000028         
   80 00000028         
   81 00000028         
   82 00000028         
   83 00000028         AcendeLed1
   84 00000028 B500            PUSH             {LR}
   85 0000002A F04F 0002       MOV              R0, #2_00000010 ; Acende o prim
                                                            eiro LED apenas
   86 0000002E F7FF FFFE       BL               PortN_Output
   87 00000032         
   88 00000032 F85D EB04       POP              {LR}
   89 00000036         
   90 00000036 4770            BX               LR
   91 00000038         
   92 00000038         AcendeLed2
   93 00000038 B500            PUSH             {LR}
   94 0000003A F04F 0001       MOV              R0, #2_00000001 ; Acende o segu
                                                            ndo LED apenas
   95 0000003E F7FF FFFE       BL               PortN_Output
   96 00000042 F85D EB04       POP              {LR}
   97 00000046         
   98 00000046 4770            BX               LR
   99 00000048         
  100 00000048         AcendeTodosLeds
  101 00000048 B500            PUSH             {LR}
  102 0000004A F04F 0003       MOV              R0, #2_00000011 ; Acende os doi
                                                            s leds
  103 0000004E F7FF FFFE       BL               PortN_Output
  104 00000052 F85D EB04       POP              {LR}
  105 00000056         
  106 00000056 4770            BX               LR
  107 00000058         
  108 00000058         ApagaLeds
  109 00000058 B500            PUSH             {LR}
  110 0000005A F04F 0000       MOV              R0, #0      ;Não acende nenhum 
                                                            LED
  111 0000005E F7FF FFFE       BL               PortN_Output
  112 00000062 F85D EB04       POP              {LR}
  113 00000066         
  114 00000066 4770            BX               LR
  115 00000068         
  116 00000068         Espera1Segundo
  117 00000068 B500            PUSH             {LR}
  118 0000006A F44F 707A       MOV              R0, #1000   ;Chamar a rotina pa
                                                            ra esperar 0,5s
  119 0000006E F7FF FFFE       BL               SysTick_Wait1ms
  120 00000072 F85D EB04       POP              {LR}
  121 00000076         
  122 00000076 4770            BX               LR
  123 00000078         
  124 00000078         
  125 00000078         
  126 00000078         
  127 00000078         ;-------------------------------------------------------
                       -------------------------
  128 00000078         ; Função Pisca_LED
  129 00000078         ; Parâmetro de entrada: Não tem
  130 00000078         ; Parâmetro de saída: Não tem



ARM Macro Assembler    Page 4 


  131 00000078         Pisca_LED
  132 00000078 F04F 0003       MOV              R0, #2_11   ;Setar o parâmetro 
                                                            de entrada da funçã
                                                            o setando o BIT1
  133 0000007C B500            PUSH             {LR}
  134 0000007E F7FF FFFE       BL               PortN_Output ;Chamar a função p
                                                            ara acender o LED1
  135 00000082 F44F 70FA       MOV              R0, #500    ;Chamar a rotina pa
                                                            ra esperar 0,5s
  136 00000086 F7FF FFFE       BL               SysTick_Wait1ms
  137 0000008A F04F 0000       MOV              R0, #0      ;Setar o parâmetro 
                                                            de entrada da funçã
                                                            o apagando o BIT1
  138 0000008E F7FF FFFE       BL               PortN_Output ;Chamar a rotina p
                                                            ara apagar o LED
  139 00000092 F44F 70FA       MOV              R0, #500    ;Chamar a rotina pa
                                                            ra esperar 0,5
  140 00000096 F7FF FFFE       BL               SysTick_Wait1ms
  141 0000009A F85D EB04       POP              {LR}
  142 0000009E 4770            BX               LR          ;return
  143 000000A0         
  144 000000A0         
  145 000000A0         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  146 000000A0         ; Fim do Arquivo
  147 000000A0         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  148 000000A0                 ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  149 000000A0                 END                          ;Fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\rafa1\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 29 in file main.s
   Uses
      None
Comment: .text unused
AcendeLed1 00000028

Symbol: AcendeLed1
   Definitions
      At line 83 in file main.s
   Uses
      At line 75 in file main.s
Comment: AcendeLed1 used once
AcendeLed2 00000038

Symbol: AcendeLed2
   Definitions
      At line 92 in file main.s
   Uses
      None
Comment: AcendeLed2 unused
AcendeTodosLeds 00000048

Symbol: AcendeTodosLeds
   Definitions
      At line 100 in file main.s
   Uses
      None
Comment: AcendeTodosLeds unused
ApagaLeds 00000058

Symbol: ApagaLeds
   Definitions
      At line 108 in file main.s
   Uses
      At line 64 in file main.s
Comment: ApagaLeds used once
Espera1Segundo 00000068

Symbol: Espera1Segundo
   Definitions
      At line 116 in file main.s
   Uses
      At line 76 in file main.s
Comment: Espera1Segundo used once
MainLoop 0000000C

Symbol: MainLoop
   Definitions
      At line 54 in file main.s
   Uses
      At line 67 in file main.s
      At line 71 in file main.s
      At line 78 in file main.s

Pisca_LED 00000078



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: Pisca_LED
   Definitions
      At line 131 in file main.s
   Uses
      None
Comment: Pisca_LED unused
Start 00000000

Symbol: Start
   Definitions
      At line 48 in file main.s
   Uses
      At line 32 in file main.s
Comment: Start used once
Verifica_Nenhuma 00000010

Symbol: Verifica_Nenhuma
   Definitions
      At line 61 in file main.s
   Uses
      None
Comment: Verifica_Nenhuma unused
Verifica_SW1 0000001A

Symbol: Verifica_SW1
   Definitions
      At line 69 in file main.s
   Uses
      At line 63 in file main.s
Comment: Verifica_SW1 used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 41 in file main.s
   Uses
      At line 51 in file main.s
Comment: GPIO_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 38 in file main.s
   Uses
      At line 49 in file main.s
Comment: PLL_Init used once
PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 43 in file main.s
   Uses
      At line 55 in file main.s
Comment: PortJ_Input used once
PortN_Output 00000000

Symbol: PortN_Output
   Definitions
      At line 42 in file main.s
   Uses
      At line 86 in file main.s
      At line 95 in file main.s
      At line 103 in file main.s
      At line 111 in file main.s
      At line 134 in file main.s
      At line 138 in file main.s

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 39 in file main.s
   Uses
      At line 50 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 40 in file main.s
   Uses
      At line 119 in file main.s
      At line 136 in file main.s
      At line 140 in file main.s

6 symbols
352 symbols in table
