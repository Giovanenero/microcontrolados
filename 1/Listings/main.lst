


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 24/08/2020
    5 00000000         ; Este programa espera o usuário apertar a chave USR_SW1
                       .
    6 00000000         ; Caso o usuário pressione a chave, o LED1 piscará a cad
                       a 0,5 segundo.
    7 00000000         
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   10 00000000         ; ------------------------------------------------------
                       -------------------------
   11 00000000         
   12 00000000         ; Declarações EQU - Defines
   13 00000000         ;<NOME>         EQU <VALOR>
   14 00000000         ; ========================
   15 00000000         
   16 00000000 0000003F 
                       DIGITO_0
                               EQU              2_0111111
   17 00000000 00000006 
                       DIGITO_1
                               EQU              2_0000110
   18 00000000 0000005B 
                       DIGITO_2
                               EQU              2_1011011
   19 00000000 0000004F 
                       DIGITO_3
                               EQU              2_1001111
   20 00000000 00000066 
                       DIGITO_4
                               EQU              2_1100110
   21 00000000 0000006D 
                       DIGITO_5
                               EQU              2_1101101
   22 00000000 0000007D 
                       DIGITO_6
                               EQU              2_1111101
   23 00000000 00000007 
                       DIGITO_7
                               EQU              2_0000111
   24 00000000 0000007F 
                       DIGITO_8
                               EQU              2_1111111
   25 00000000 0000006F 
                       DIGITO_9
                               EQU              2_1101111
   26 00000000 00000005 
                       LIMIT_MIM_TEMP_ALVO
                               EQU              5
   27 00000000 00000032 
                       LIMIT_MAX_TEMP_ALVO
                               EQU              50
   28 00000000 20000404 
                       ADDRESS_ALVO
                               EQU              0x20000404



ARM Macro Assembler    Page 2 


   29 00000000 20000400 
                       ADDRESS_CURRENT
                               EQU              0x20000400
   30 00000000 20000600 
                       DISPLAY_DEZENA
                               EQU              0x20000600
   31 00000000 20000604 
                       DISPLAY_UNIDADE
                               EQU              0x20000604
   32 00000000 20000608 
                       ADDRESS_WRITE_500MS
                               EQU              0x20000608
   33 00000000         
   34 00000000         ; ------------------------------------------------------
                       -------------------------
   35 00000000         ; Área de Dados - Declarações de variáveis
   36 00000000                 AREA             DATA, ALIGN=2
   37 00000000         ; Se alguma variável for chamada em outro arquivo
   38 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   39 00000000         ; partir de outro arquivo
   40 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   41 00000000         ; de <tam> bytes a partir da primeira 
   42 00000000         ; posição da RAM  
   43 00000000         
   44 00000000         ; ------------------------------------------------------
                       -------------------------
   45 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   46 00000000         ;                  código
   47 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   48 00000000         
   49 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   50 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   51 00000000         ; outro arquivo. No caso startup.s
   52 00000000         
   53 00000000         ; Se chamar alguma função externa 
   54 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   55 00000000         ; função <func>
   56 00000000                 IMPORT           PLL_Init
   57 00000000                 IMPORT           SysTick_Init
   58 00000000                 IMPORT           SysTick_Wait1ms
   59 00000000                 IMPORT           GPIO_Init
   60 00000000                 IMPORT           PortAQ_Output
   61 00000000                 IMPORT           PortB_Output
   62 00000000                 IMPORT           PortJ_Input
   63 00000000                 IMPORT           PortN_Output
   64 00000000                 IMPORT           PortP_Output
   65 00000000         
   66 00000000         
   67 00000000         ; ------------------------------------------------------
                       -------------------------
   68 00000000         ; Função main()



ARM Macro Assembler    Page 3 


   69 00000000         Start
   70 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   71 00000004 F7FF FFFE       BL               SysTick_Init
   72 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   73 0000000C F000 F801       BL               inicializaMemoria
   74 00000010         
   75 00000010 E019            B                MainLoop
   76 00000012         
   77 00000012         inicializaMemoria
   78 00000012         ; Temperatura alvo
   79 00000012 F04F 0819       MOV              R8, #25
   80 00000016         
   81 00000016 489E            LDR              R0, =ADDRESS_ALVO
   82 00000018 F8C0 8000       STR              R8, [R0]
   83 0000001C         
   84 0000001C F04F 090F       MOV              R9, #15
   85 00000020 489C            LDR              R0, =ADDRESS_CURRENT
   86 00000022 F8C0 9000       STR              R9, [R0]
   87 00000026         
   88 00000026         ; Display
   89 00000026 F04F 0701       MOV              R7, #1
   90 0000002A 489B            LDR              R0, =DISPLAY_DEZENA
   91 0000002C 6007            STR              R7, [R0]
   92 0000002E         
   93 0000002E F04F 0605       MOV              R6, #5
   94 00000032 489A            LDR              R0, =DISPLAY_UNIDADE
   95 00000034 6006            STR              R6, [R0]
   96 00000036         
   97 00000036         ; Contador switch
   98 00000036 F04F 0900       MOV              R9, #0
   99 0000003A 4899            LDR              R0, =ADDRESS_WRITE_500MS
  100 0000003C F8C0 9000       STR              R9, [R0]
  101 00000040         
  102 00000040 F04F 0901       MOV              R9, #1
  103 00000044         
  104 00000044 4770            BX               LR
  105 00000046         
  106 00000046         
  107 00000046         MainLoop
  108 00000046 F7FF FFFE       BL               PortJ_Input ;Chama a subrotina 
                                                            que lê o estado das
                                                             chaves e coloca o 
                                                            resultado em R12
  109 0000004A E02A            B                esperaSW
  110 0000004C         
  111 0000004C         VerificaSW
  112 0000004C         
  113 0000004C         ; verifica SW1
  114 0000004C F1BC 0F02       CMP              R12, #2_00000010
  115 00000050 BF04            ITT              EQ
  116 00000052 F04F 0900       MOVEQ            R9, #0
  117 00000056 F000 F833       BLEQ             incrementaAlvo
  118 0000005A         
  119 0000005A         ; verifica SW2



ARM Macro Assembler    Page 4 


  120 0000005A F1BC 0F01       CMP              R12, #2_00000001
  121 0000005E BF04            ITT              EQ
  122 00000060 F04F 0900       MOVEQ            R9, #0
  123 00000064 F000 F839       BLEQ             decrementaAlvo
  124 00000068         
  125 00000068         VoltaLoop
  126 00000068         
  127 00000068 F000 F882       BL               RefreshDisplay
  128 0000006C         
  129 0000006C         
  130 0000006C F108 0805       ADD              R8, R8, #5  ; N = 10
  131 00000070 F5B8 7F7A       CMP              R8, #1000   ; significa 1000ms
  132 00000074 BF04            ITT              EQ
  133 00000076 F04F 0800       MOVEQ            R8, #0
  134 0000007A F000 F801       BLEQ             VerificaTemperatura
  135 0000007E         
  136 0000007E E7E2            B                MainLoop
  137 00000080         
  138 00000080         
  139 00000080         VerificaTemperatura
  140 00000080         ;MOV R0, #1000 ; define o tempo de espera
  141 00000080         ;BL EsperaXms
  142 00000080         
  143 00000080 F04F 0700       MOV              R7, #0
  144 00000084 F04F 000A       MOV              R0, #10
  145 00000088 FB0A F700       MUL              R7, R10, R0
  146 0000008C 445F            ADD              R7, R7, R11
  147 0000008E         
  148 0000008E 4881            LDR              R0, =ADDRESS_CURRENT
  149 00000090 6801            LDR              R1, [R0]
  150 00000092         
  151 00000092 487F            LDR              R0, =ADDRESS_ALVO
  152 00000094 6802            LDR              R2, [R0]
  153 00000096         
  154 00000096 4291            CMP              R1, R2
  155 00000098 DC39            BGT              decrementaTempAtual
  156 0000009A DB2B            BLT              incrementaTempAtual
  157 0000009C F000 F8F0       BL               AcendeTodosLeds
  158 000000A0         
  159 000000A0 E7D1            B                MainLoop
  160 000000A2         
  161 000000A2         esperaSW
  162 000000A2         
  163 000000A2 487F            LDR              R0, =ADDRESS_WRITE_500MS
  164 000000A4 6801            LDR              R1, [R0]
  165 000000A6         
  166 000000A6 F1B9 0F01       CMP              R9, #1
  167 000000AA D0CF            BEQ              VerificaSW
  168 000000AC         
  169 000000AC         ; caso R9 ja foi pressionado...
  170 000000AC F101 0105       ADD              R1, R1, #5
  171 000000B0         
  172 000000B0 F5B1 7F16       CMP              R1, #600
  173 000000B4 BF04            ITT              EQ
  174 000000B6 2100            MOVEQ            R1, #0
  175 000000B8 F04F 0901       MOVEQ            R9, #1      ; agora pode pressi
                                                            onar o SW
  176 000000BC         
  177 000000BC         



ARM Macro Assembler    Page 5 


  178 000000BC 6001            STR              R1, [R0]
  179 000000BE         
  180 000000BE E7D3            B                VoltaLoop
  181 000000C0         
  182 000000C0         
  183 000000C0         incrementaAlvo                       ; ao pressionar o S
                                                            W1
  184 000000C0 F000 F8CE       BL               AcendeLed1
  185 000000C4 4872            LDR              R0, =ADDRESS_ALVO
  186 000000C6 6801            LDR              R1, [R0]
  187 000000C8 F101 0101       ADD              R1, R1, #1
  188 000000CC 6001            STR              R1, [R0]
  189 000000CE         
  190 000000CE F04F 0232       MOV              R2, #LIMIT_MAX_TEMP_ALVO ; a te
                                                            mperatura alvo não 
                                                            pode ser maior que 
                                                            50
  191 000000D2 4291            CMP              R1, R2
  192 000000D4 DBC8            BLT              VoltaLoop
  193 000000D6         
  194 000000D6 6002            STR              R2, [R0]    ; força a temperatu
                                                            ra alvo ficar em 50
                                                            
  195 000000D8 E7C6            B                VoltaLoop
  196 000000DA         
  197 000000DA         
  198 000000DA         decrementaAlvo                       ; ao pressionar o S
                                                            W1
  199 000000DA F000 F8C9       BL               AcendeLed2
  200 000000DE 486C            LDR              R0, =ADDRESS_ALVO
  201 000000E0 6801            LDR              R1, [R0]
  202 000000E2 F1A1 0101       SUB              R1, R1, #1
  203 000000E6 6001            STR              R1, [R0]
  204 000000E8         
  205 000000E8 F04F 0205       MOV              R2, #LIMIT_MIM_TEMP_ALVO ; a te
                                                            mperatura alvo não 
                                                            pode ser maior que 
                                                            5
  206 000000EC 4291            CMP              R1, R2
  207 000000EE DCBB            BGT              VoltaLoop
  208 000000F0         
  209 000000F0 6002            STR              R2, [R0]    ; força a temperatu
                                                            ra alvo ficar em 5
  210 000000F2 E7B9            B                VoltaLoop
  211 000000F4         
  212 000000F4         
  213 000000F4         
  214 000000F4         incrementaTempAtual                  ; ao pressionar o S
                                                            W1
  215 000000F4 F000 F8B4       BL               AcendeLed1
  216 000000F8 4866            LDR              R0, =ADDRESS_CURRENT
  217 000000FA 6801            LDR              R1, [R0]
  218 000000FC F101 0101       ADD              R1, R1, #1
  219 00000100 6001            STR              R1, [R0]
  220 00000102         
  221 00000102 F04F 0232       MOV              R2, #LIMIT_MAX_TEMP_ALVO ; a te
                                                            mperatura alvo não 
                                                            pode ser maior que 
                                                            50



ARM Macro Assembler    Page 6 


  222 00000106 4291            CMP              R1, R2
  223 00000108 DB9D            BLT              MainLoop
  224 0000010A         
  225 0000010A 6002            STR              R2, [R0]    ; força a temperatu
                                                            ra alvo ficar em 50
                                                            
  226 0000010C E79B            B                MainLoop
  227 0000010E         
  228 0000010E         
  229 0000010E         decrementaTempAtual                  ; ao pressionar o S
                                                            W1
  230 0000010E F000 F8AF       BL               AcendeLed2
  231 00000112 4860            LDR              R0, =ADDRESS_CURRENT
  232 00000114 6801            LDR              R1, [R0]
  233 00000116 F1A1 0101       SUB              R1, R1, #1
  234 0000011A 6001            STR              R1, [R0]
  235 0000011C         
  236 0000011C F04F 0205       MOV              R2, #LIMIT_MIM_TEMP_ALVO ; a te
                                                            mperatura alvo não 
                                                            pode ser maior que 
                                                            5
  237 00000120 4291            CMP              R1, R2
  238 00000122 DC90            BGT              MainLoop
  239 00000124         
  240 00000124 6002            STR              R2, [R0]    ; força a temperatu
                                                            ra alvo ficar em 5
  241 00000126 E78E            B                MainLoop
  242 00000128         
  243 00000128         
  244 00000128         LigaDisplay
  245 00000128 B500            PUSH             {LR}
  246 0000012A         
  247 0000012A F04F 0001       MOV              R0, #1
  248 0000012E F000 F891       BL               EsperaXms
  249 00000132         
  250 00000132         ;MOV  R5, #0     ; PB5 = 1, PB4 = 0
  251 00000132         ;BL   PortP_Output
  252 00000132 F7FF FFFE       BL               PortB_Output
  253 00000136         
  254 00000136 F04F 0001       MOV              R0, #1
  255 0000013A F000 F88B       BL               EsperaXms
  256 0000013E         
  257 0000013E F04F 0500       MOV              R5, #0      ; PB5 = 1, PB4 = 0
  258 00000142 F7FF FFFE       BL               PortB_Output ; escreve em PB4/P
                                                            B5
  259 00000146         
  260 00000146         
  261 00000146 F85D EB04       POP              {LR}
  262 0000014A 4770            BX               LR
  263 0000014C         
  264 0000014C         
  265 0000014C         LigaLeds
  266 0000014C B500            PUSH             {LR}
  267 0000014E F04F 0001       MOV              R0, #1
  268 00000152 F7FF FFFE       BL               SysTick_Wait1ms
  269 00000156         
  270 00000156 F7FF FFFE       BL               PortP_Output
  271 0000015A         
  272 0000015A F04F 0001       MOV              R0, #1



ARM Macro Assembler    Page 7 


  273 0000015E F7FF FFFE       BL               SysTick_Wait1ms
  274 00000162         
  275 00000162 F04F 0500       MOV              R5, #0
  276 00000166 F7FF FFFE       BL               PortP_Output
  277 0000016A         
  278 0000016A F85D EB04       POP              {LR}
  279 0000016E 4770            BX               LR
  280 00000170         
  281 00000170         
  282 00000170         RefreshDisplay
  283 00000170 B500            PUSH             {LR}
  284 00000172         
  285 00000172 4848            LDR              R0, =ADDRESS_CURRENT
  286 00000174 6801            LDR              R1, [R0]
  287 00000176         
  288 00000176 F04F 000A       MOV              R0, #10
  289 0000017A FBB1 F2F0       UDIV             R2, R1, R0
  290 0000017E         
  291 0000017E FB02 1310       MLS              R3, R2, R0, R1
  292 00000182 465D            MOV              R5, R11
  293 00000184         
  294 00000184 4844            LDR              R0, =DISPLAY_DEZENA
  295 00000186 6002            STR              R2, [R0]
  296 00000188         
  297 00000188 4844            LDR              R0, =DISPLAY_UNIDADE
  298 0000018A 6003            STR              R3, [R0]
  299 0000018C         
  300 0000018C         ; Dezenas (PB4) 
  301 0000018C 4842            LDR              R0, =DISPLAY_DEZENA
  302 0000018E F000 F816       BL               AtualizaValorDisplay
  303 00000192 F04F 0510       MOV              R5, #2_10000
  304 00000196 F7FF FFC7       BL               LigaDisplay
  305 0000019A         
  306 0000019A         ; Unidades (PB5) 
  307 0000019A 4840            LDR              R0, =DISPLAY_UNIDADE
  308 0000019C F000 F80F       BL               AtualizaValorDisplay
  309 000001A0 F04F 0520       MOV              R5, #2_100000
  310 000001A4 F7FF FFC0       BL               LigaDisplay
  311 000001A8         
  312 000001A8         ; Leds
  313 000001A8 4839            LDR              R0, =ADDRESS_ALVO
  314 000001AA 6804            LDR              R4, [R0]
  315 000001AC F7FF FFFE       BL               PortAQ_Output
  316 000001B0         
  317 000001B0 F04F 0520       MOV              R5, #2_100000
  318 000001B4 F7FF FFCA       BL               LigaLeds
  319 000001B8         
  320 000001B8 F85D EB04       POP              {LR}
  321 000001BC 4770            BX               LR
  322 000001BE         
  323 000001BE         
  324 000001BE         AtualizaValorDisplay
  325 000001BE 6801            LDR              R1, [R0]    ; endereço do valor
                                                             da dezena/unidade
  326 000001C0         
  327 000001C0 F04F 0700       MOV              R7, #0
  328 000001C4 B500            PUSH             {LR}
  329 000001C6         
  330 000001C6 42B9            CMP              R1, R7



ARM Macro Assembler    Page 8 


  331 000001C8 BF04            ITT              EQ
  332 000001CA 243F            MOVEQ            R4, #DIGITO_0
  333 000001CC F7FF FFFE       BLEQ             PortAQ_Output
  334 000001D0         
  335 000001D0 F107 0701       ADD              R7, #1
  336 000001D4 42B9            CMP              R1, R7
  337 000001D6 BF04            ITT              EQ
  338 000001D8 2406            MOVEQ            R4, #DIGITO_1
  339 000001DA F7FF FFFE       BLEQ             PortAQ_Output
  340 000001DE         
  341 000001DE F107 0701       ADD              R7, #1
  342 000001E2 42B9            CMP              R1, R7
  343 000001E4 BF04            ITT              EQ
  344 000001E6 245B            MOVEQ            R4, #DIGITO_2
  345 000001E8 F7FF FFFE       BLEQ             PortAQ_Output
  346 000001EC         
  347 000001EC F107 0701       ADD              R7, #1
  348 000001F0 42B9            CMP              R1, R7
  349 000001F2 BF04            ITT              EQ
  350 000001F4 244F            MOVEQ            R4, #DIGITO_3
  351 000001F6 F7FF FFFE       BLEQ             PortAQ_Output
  352 000001FA         
  353 000001FA F107 0701       ADD              R7, #1
  354 000001FE 42B9            CMP              R1, R7
  355 00000200 BF04            ITT              EQ
  356 00000202 2466            MOVEQ            R4, #DIGITO_4
  357 00000204 F7FF FFFE       BLEQ             PortAQ_Output
  358 00000208         
  359 00000208 F107 0701       ADD              R7, #1
  360 0000020C 42B9            CMP              R1, R7
  361 0000020E BF04            ITT              EQ
  362 00000210 246D            MOVEQ            R4, #DIGITO_5
  363 00000212 F7FF FFFE       BLEQ             PortAQ_Output
  364 00000216         
  365 00000216 F107 0701       ADD              R7, #1
  366 0000021A 42B9            CMP              R1, R7
  367 0000021C BF04            ITT              EQ
  368 0000021E 247D            MOVEQ            R4, #DIGITO_6
  369 00000220 F7FF FFFE       BLEQ             PortAQ_Output
  370 00000224         
  371 00000224 F107 0701       ADD              R7, #1
  372 00000228 42B9            CMP              R1, R7
  373 0000022A BF04            ITT              EQ
  374 0000022C 2407            MOVEQ            R4, #DIGITO_7
  375 0000022E F7FF FFFE       BLEQ             PortAQ_Output
  376 00000232         
  377 00000232 F107 0701       ADD              R7, #1
  378 00000236 42B9            CMP              R1, R7
  379 00000238 BF04            ITT              EQ
  380 0000023A 247F            MOVEQ            R4, #DIGITO_8
  381 0000023C F7FF FFFE       BLEQ             PortAQ_Output
  382 00000240         
  383 00000240 F107 0701       ADD              R7, #1
  384 00000244 42B9            CMP              R1, R7
  385 00000246 BF04            ITT              EQ
  386 00000248 246F            MOVEQ            R4, #DIGITO_9
  387 0000024A F7FF FFFE       BLEQ             PortAQ_Output
  388 0000024E         
  389 0000024E F85D EB04       POP              {LR}



ARM Macro Assembler    Page 9 


  390 00000252 4770            BX               LR
  391 00000254         
  392 00000254         
  393 00000254         ; usa o R0 como valor de espera
  394 00000254         EsperaXms
  395 00000254 B500            PUSH             {LR}
  396 00000256 F7FF FFFE       BL               SysTick_Wait1ms
  397 0000025A F85D EB04       POP              {LR}
  398 0000025E         
  399 0000025E 4770            BX               LR
  400 00000260         
  401 00000260         AcendeLed1
  402 00000260 B500            PUSH             {LR}
  403 00000262 F04F 0002       MOV              R0, #2_00000010 ; Acende o prim
                                                            eiro LED apenas
  404 00000266 F7FF FFFE       BL               PortN_Output
  405 0000026A F85D EB04       POP              {LR}
  406 0000026E         
  407 0000026E 4770            BX               LR
  408 00000270         
  409 00000270         AcendeLed2
  410 00000270 B500            PUSH             {LR}
  411 00000272 F04F 0001       MOV              R0, #2_00000001 ; Acende o segu
                                                            ndo LED apenas
  412 00000276 F7FF FFFE       BL               PortN_Output
  413 0000027A F85D EB04       POP              {LR}
  414 0000027E         
  415 0000027E 4770            BX               LR
  416 00000280         
  417 00000280         AcendeTodosLeds
  418 00000280 B500            PUSH             {LR}
  419 00000282 F04F 0003       MOV              R0, #2_00000011 ; Acende os doi
                                                            s leds
  420 00000286 F7FF FFFE       BL               PortN_Output
  421 0000028A F85D EB04       POP              {LR}
  422 0000028E         
  423 0000028E 4770            BX               LR
  424 00000290         
  425 00000290         
  426 00000290         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  427 00000290         ; Fim do Arquivo
  428 00000290         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  429 00000290                 ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  430 00000290                 END                          ;Fim do arquivo
              20000404 
              20000400 
              20000600 
              20000604 
              20000608 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\rafa1\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE



ARM Macro Assembler    Page 10 


TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 36 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 47 in file main.s
   Uses
      None
Comment: .text unused
AcendeLed1 00000260

Symbol: AcendeLed1
   Definitions
      At line 401 in file main.s
   Uses
      At line 184 in file main.s
      At line 215 in file main.s

AcendeLed2 00000270

Symbol: AcendeLed2
   Definitions
      At line 409 in file main.s
   Uses
      At line 199 in file main.s
      At line 230 in file main.s

AcendeTodosLeds 00000280

Symbol: AcendeTodosLeds
   Definitions
      At line 417 in file main.s
   Uses
      At line 157 in file main.s
Comment: AcendeTodosLeds used once
AtualizaValorDisplay 000001BE

Symbol: AtualizaValorDisplay
   Definitions
      At line 324 in file main.s
   Uses
      At line 302 in file main.s
      At line 308 in file main.s

EsperaXms 00000254

Symbol: EsperaXms
   Definitions
      At line 394 in file main.s
   Uses
      At line 248 in file main.s
      At line 255 in file main.s

LigaDisplay 00000128

Symbol: LigaDisplay
   Definitions
      At line 244 in file main.s
   Uses
      At line 304 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 310 in file main.s

LigaLeds 0000014C

Symbol: LigaLeds
   Definitions
      At line 265 in file main.s
   Uses
      At line 318 in file main.s
Comment: LigaLeds used once
MainLoop 00000046

Symbol: MainLoop
   Definitions
      At line 107 in file main.s
   Uses
      At line 75 in file main.s
      At line 136 in file main.s
      At line 159 in file main.s
      At line 223 in file main.s
      At line 226 in file main.s
      At line 238 in file main.s
      At line 241 in file main.s

RefreshDisplay 00000170

Symbol: RefreshDisplay
   Definitions
      At line 282 in file main.s
   Uses
      At line 127 in file main.s
Comment: RefreshDisplay used once
Start 00000000

Symbol: Start
   Definitions
      At line 69 in file main.s
   Uses
      At line 50 in file main.s
Comment: Start used once
VerificaSW 0000004C

Symbol: VerificaSW
   Definitions
      At line 111 in file main.s
   Uses
      At line 167 in file main.s
Comment: VerificaSW used once
VerificaTemperatura 00000080

Symbol: VerificaTemperatura
   Definitions
      At line 139 in file main.s
   Uses
      At line 134 in file main.s
Comment: VerificaTemperatura used once
VoltaLoop 00000068

Symbol: VoltaLoop



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 125 in file main.s
   Uses
      At line 180 in file main.s
      At line 192 in file main.s
      At line 195 in file main.s
      At line 207 in file main.s
      At line 210 in file main.s

decrementaAlvo 000000DA

Symbol: decrementaAlvo
   Definitions
      At line 198 in file main.s
   Uses
      At line 123 in file main.s
Comment: decrementaAlvo used once
decrementaTempAtual 0000010E

Symbol: decrementaTempAtual
   Definitions
      At line 229 in file main.s
   Uses
      At line 155 in file main.s
Comment: decrementaTempAtual used once
esperaSW 000000A2

Symbol: esperaSW
   Definitions
      At line 161 in file main.s
   Uses
      At line 109 in file main.s
Comment: esperaSW used once
incrementaAlvo 000000C0

Symbol: incrementaAlvo
   Definitions
      At line 183 in file main.s
   Uses
      At line 117 in file main.s
Comment: incrementaAlvo used once
incrementaTempAtual 000000F4

Symbol: incrementaTempAtual
   Definitions
      At line 214 in file main.s
   Uses
      At line 156 in file main.s
Comment: incrementaTempAtual used once
inicializaMemoria 00000012

Symbol: inicializaMemoria
   Definitions
      At line 77 in file main.s
   Uses
      At line 73 in file main.s
Comment: inicializaMemoria used once
20 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADDRESS_ALVO 20000404

Symbol: ADDRESS_ALVO
   Definitions
      At line 28 in file main.s
   Uses
      At line 81 in file main.s
      At line 151 in file main.s
      At line 185 in file main.s
      At line 200 in file main.s
      At line 313 in file main.s

ADDRESS_CURRENT 20000400

Symbol: ADDRESS_CURRENT
   Definitions
      At line 29 in file main.s
   Uses
      At line 85 in file main.s
      At line 148 in file main.s
      At line 216 in file main.s
      At line 231 in file main.s
      At line 285 in file main.s

ADDRESS_WRITE_500MS 20000608

Symbol: ADDRESS_WRITE_500MS
   Definitions
      At line 32 in file main.s
   Uses
      At line 99 in file main.s
      At line 163 in file main.s

DIGITO_0 0000003F

Symbol: DIGITO_0
   Definitions
      At line 16 in file main.s
   Uses
      At line 332 in file main.s
Comment: DIGITO_0 used once
DIGITO_1 00000006

Symbol: DIGITO_1
   Definitions
      At line 17 in file main.s
   Uses
      At line 338 in file main.s
Comment: DIGITO_1 used once
DIGITO_2 0000005B

Symbol: DIGITO_2
   Definitions
      At line 18 in file main.s
   Uses
      At line 344 in file main.s
Comment: DIGITO_2 used once
DIGITO_3 0000004F




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: DIGITO_3
   Definitions
      At line 19 in file main.s
   Uses
      At line 350 in file main.s
Comment: DIGITO_3 used once
DIGITO_4 00000066

Symbol: DIGITO_4
   Definitions
      At line 20 in file main.s
   Uses
      At line 356 in file main.s
Comment: DIGITO_4 used once
DIGITO_5 0000006D

Symbol: DIGITO_5
   Definitions
      At line 21 in file main.s
   Uses
      At line 362 in file main.s
Comment: DIGITO_5 used once
DIGITO_6 0000007D

Symbol: DIGITO_6
   Definitions
      At line 22 in file main.s
   Uses
      At line 368 in file main.s
Comment: DIGITO_6 used once
DIGITO_7 00000007

Symbol: DIGITO_7
   Definitions
      At line 23 in file main.s
   Uses
      At line 374 in file main.s
Comment: DIGITO_7 used once
DIGITO_8 0000007F

Symbol: DIGITO_8
   Definitions
      At line 24 in file main.s
   Uses
      At line 380 in file main.s
Comment: DIGITO_8 used once
DIGITO_9 0000006F

Symbol: DIGITO_9
   Definitions
      At line 25 in file main.s
   Uses
      At line 386 in file main.s
Comment: DIGITO_9 used once
DISPLAY_DEZENA 20000600

Symbol: DISPLAY_DEZENA
   Definitions
      At line 30 in file main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 90 in file main.s
      At line 294 in file main.s
      At line 301 in file main.s

DISPLAY_UNIDADE 20000604

Symbol: DISPLAY_UNIDADE
   Definitions
      At line 31 in file main.s
   Uses
      At line 94 in file main.s
      At line 297 in file main.s
      At line 307 in file main.s

LIMIT_MAX_TEMP_ALVO 00000032

Symbol: LIMIT_MAX_TEMP_ALVO
   Definitions
      At line 27 in file main.s
   Uses
      At line 190 in file main.s
      At line 221 in file main.s

LIMIT_MIM_TEMP_ALVO 00000005

Symbol: LIMIT_MIM_TEMP_ALVO
   Definitions
      At line 26 in file main.s
   Uses
      At line 205 in file main.s
      At line 236 in file main.s

17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 59 in file main.s
   Uses
      At line 72 in file main.s
Comment: GPIO_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 56 in file main.s
   Uses
      At line 70 in file main.s
Comment: PLL_Init used once
PortAQ_Output 00000000

Symbol: PortAQ_Output
   Definitions
      At line 60 in file main.s
   Uses
      At line 315 in file main.s
      At line 333 in file main.s
      At line 339 in file main.s
      At line 345 in file main.s
      At line 351 in file main.s
      At line 357 in file main.s
      At line 363 in file main.s
      At line 369 in file main.s
      At line 375 in file main.s
      At line 381 in file main.s
      At line 387 in file main.s

PortB_Output 00000000

Symbol: PortB_Output
   Definitions
      At line 61 in file main.s
   Uses
      At line 252 in file main.s
      At line 258 in file main.s

PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 62 in file main.s
   Uses
      At line 108 in file main.s
Comment: PortJ_Input used once
PortN_Output 00000000

Symbol: PortN_Output
   Definitions
      At line 63 in file main.s
   Uses
      At line 404 in file main.s
      At line 412 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 420 in file main.s

PortP_Output 00000000

Symbol: PortP_Output
   Definitions
      At line 64 in file main.s
   Uses
      At line 270 in file main.s
      At line 276 in file main.s

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 57 in file main.s
   Uses
      At line 71 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 58 in file main.s
   Uses
      At line 268 in file main.s
      At line 273 in file main.s
      At line 396 in file main.s

9 symbols
383 symbols in table
