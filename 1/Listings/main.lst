


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 24/08/2020
    5 00000000         ; Este programa espera o usuário apertar a chave USR_SW1
                       .
    6 00000000         ; Caso o usuário pressione a chave, o LED1 piscará a cad
                       a 0,5 segundo.
    7 00000000         
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   10 00000000         ; ------------------------------------------------------
                       -------------------------
   11 00000000         
   12 00000000         ; Declarações EQU - Defines
   13 00000000         ;<NOME>         EQU <VALOR>
   14 00000000         ; ========================
   15 00000000         
   16 00000000 0000003F 
                       DIGITO_0
                               EQU              2_0111111
   17 00000000 00000006 
                       DIGITO_1
                               EQU              2_0000110
   18 00000000 0000005B 
                       DIGITO_2
                               EQU              2_1011011
   19 00000000 0000004F 
                       DIGITO_3
                               EQU              2_1001111
   20 00000000 00000066 
                       DIGITO_4
                               EQU              2_1100110
   21 00000000 0000006D 
                       DIGITO_5
                               EQU              2_1101101
   22 00000000 0000007D 
                       DIGITO_6
                               EQU              2_1111101
   23 00000000 00000007 
                       DIGITO_7
                               EQU              2_0000111
   24 00000000 0000007F 
                       DIGITO_8
                               EQU              2_1111111
   25 00000000 0000006F 
                       DIGITO_9
                               EQU              2_1101111
   26 00000000         
   27 00000000         ; ------------------------------------------------------
                       -------------------------
   28 00000000         ; Área de Dados - Declarações de variáveis
   29 00000000                 AREA             DATA, ALIGN=2
   30 00000000         ; Se alguma variável for chamada em outro arquivo
   31 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   32 00000000         ; partir de outro arquivo



ARM Macro Assembler    Page 2 


   33 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   34 00000000         ; de <tam> bytes a partir da primeira 
   35 00000000         ; posição da RAM  
   36 00000000         
   37 00000000         ; ------------------------------------------------------
                       -------------------------
   38 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   39 00000000         ;                  código
   40 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   41 00000000         
   42 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   43 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   44 00000000         ; outro arquivo. No caso startup.s
   45 00000000         
   46 00000000         ; Se chamar alguma função externa 
   47 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   48 00000000         ; função <func>
   49 00000000                 IMPORT           PLL_Init
   50 00000000                 IMPORT           SysTick_Init
   51 00000000                 IMPORT           SysTick_Wait1ms
   52 00000000                 IMPORT           GPIO_Init
   53 00000000                 IMPORT           PortAQ_Output
   54 00000000                 IMPORT           PortB_Output
   55 00000000                 IMPORT           PortJ_Input
   56 00000000                 IMPORT           PortN_Output
   57 00000000                 IMPORT           PortP_Output
   58 00000000         
   59 00000000         
   60 00000000         ; ------------------------------------------------------
                       -------------------------
   61 00000000         ; Função main()
   62 00000000         Start
   63 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   64 00000004 F7FF FFFE       BL               SysTick_Init
   65 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   66 0000000C         
   67 0000000C         ; Define os valores iniciais (15) 
   68 0000000C F04F 0A01       MOV              R10, #1     ; dezenas
   69 00000010 F04F 0605       MOV              R6, #5      ; unidades
   70 00000014         
   71 00000014 4635            MOV              R5, R6
   72 00000016 F000 F871       BL               AtualizaValorDisplay
   73 0000001A         
   74 0000001A         MainLoop
   75 0000001A F000 F829       BL               RefreshDisplay
   76 0000001E F7FF FFFE       BL               PortJ_Input ;Chama a subrotina 
                                                            que lê o estado das



ARM Macro Assembler    Page 3 


                                                             chaves e coloca o 
                                                            resultado em R12
   77 00000022         
   78 00000022         
   79 00000022         Verifica_SW1
   80 00000022 F1BC 0F02       CMP              R12, #2_00000010 ;Verifica se s
                                                            omente a chave SW1 
                                                            está pressionada
   81 00000026 D107            BNE              Verifica_SW2 ;Se o teste falhou
                                                            , volta para o iníc
                                                            io do laço principa
                                                            l
   82 00000028         
   83 00000028 F000 F8BE       BL               AcendeLed1
   84 0000002C F000 F836       BL               IncrementaValor
   85 00000030 F44F 70FA       MOV              R0, #500    ; define o tempo de
                                                             espera
   86 00000034 F000 F8AC       BL               EsperaXms
   87 00000038         
   88 00000038         
   89 00000038         Verifica_SW2
   90 00000038 F1BC 0F01       CMP              R12, #2_00000001 ;Verifica se s
                                                            omente a chave SW1 
                                                            está pressionada
   91 0000003C D1ED            BNE              MainLoop    ;Se o teste falhou,
                                                             volta para o iníci
                                                            o do laço principal
                                                            
   92 0000003E         
   93 0000003E F000 F8B3       BL               AcendeLed1
   94 00000042 F000 F83A       BL               DecrementaValor
   95 00000046         
   96 00000046 F44F 70FA       MOV              R0, #500    ; define o tempo de
                                                             espera
   97 0000004A F000 F8A1       BL               EsperaXms
   98 0000004E         
   99 0000004E E7E4            B                MainLoop    ;Volta para o laço 
                                                            principal
  100 00000050         
  101 00000050         
  102 00000050         
  103 00000050         
  104 00000050         LigaUnidades
  105 00000050 B500            PUSH             {LR}
  106 00000052 F04F 0520       MOV              R5, #2_100000 
                                                            ; PB5 = 1, PB4 = 0
  107 00000056 F7FF FFFE       BL               PortB_Output ; escreve em PB4/P
                                                            B5
  108 0000005A F85D EB04       POP              {LR}
  109 0000005E 4770            BX               LR
  110 00000060         
  111 00000060         LigaDezenas
  112 00000060 B500            PUSH             {LR}
  113 00000062 F04F 0510       MOV              R5, #2_10000 ; PB5 = 1, PB4 = 0
                                                            
  114 00000066 F7FF FFFE       BL               PortB_Output ; escreve em PB4/P
                                                            B5
  115 0000006A F85D EB04       POP              {LR}
  116 0000006E 4770            BX               LR



ARM Macro Assembler    Page 4 


  117 00000070         
  118 00000070         RefreshDisplay
  119 00000070 B500            PUSH             {LR}
  120 00000072         
  121 00000072         ; Unidades (PB5) 
  122 00000072 4635            MOV              R5, R6
  123 00000074 F000 F842       BL               AtualizaValorDisplay
  124 00000078 F7FF FFEA       BL               LigaUnidades
  125 0000007C F04F 0001       MOV              R0, #1
  126 00000080 F000 F886       BL               EsperaXms
  127 00000084         
  128 00000084         ; Dezenas (PB4) 
  129 00000084 4655            MOV              R5, R10
  130 00000086 F000 F839       BL               AtualizaValorDisplay
  131 0000008A F7FF FFE9       BL               LigaDezenas
  132 0000008E F04F 0001       MOV              R0, #1
  133 00000092 F000 F87D       BL               EsperaXms
  134 00000096         
  135 00000096 F85D EB04       POP              {LR}
  136 0000009A 4770            BX               LR
  137 0000009C         
  138 0000009C         
  139 0000009C         IncrementaValor
  140 0000009C B500            PUSH             {LR}
  141 0000009E         
  142 0000009E F1BA 0F05       CMP              R10, #5     ; se a dezena estiv
                                                            er em 5 sai do loop
                                                             e nao aumenta
  143 000000A2 D009            BEQ              SaiIncrementaValor
  144 000000A4         
  145 000000A4 F106 0601       ADD              R6, #1
  146 000000A8 2E0A            CMP              R6, #10
  147 000000AA DB05            BLT              SaiIncrementaValor
  148 000000AC F04F 0600       MOV              R6, #0
  149 000000B0         
  150 000000B0 F000 F814       BL               AumentaDezena
  151 000000B4 F85D EB04       POP              {LR}
  152 000000B8         
  153 000000B8         SaiIncrementaValor
  154 000000B8 4770            BX               LR
  155 000000BA         
  156 000000BA         
  157 000000BA         DecrementaValor
  158 000000BA B500            PUSH             {LR}
  159 000000BC         
  160 000000BC F1BA 0F00       CMP              R10, #0     ; compara se a deze
                                                            na e 0, se nao for 
                                                            pode diminuir o val
                                                            or
  161 000000C0 D101            BNE              DiminuiValor
  162 000000C2 2E05            CMP              R6,  #5     ; se a dezena for 0
                                                             e a unidade for ig
                                                            ual a 5 nao diminui
                                                             mais, sai da funca
                                                            o
  163 000000C4 D009            BEQ              SaiDecrementaValor
  164 000000C6         
  165 000000C6         DiminuiValor
  166 000000C6 F1A6 0601       SUB              R6, #1



ARM Macro Assembler    Page 5 


  167 000000CA 2E00            CMP              R6, #0
  168 000000CC DA05            BGE              SaiDecrementaValor
  169 000000CE F04F 0609       MOV              R6, #9
  170 000000D2 F000 F80B       BL               DiminuiDezena
  171 000000D6 F85D EB04       POP              {LR}
  172 000000DA         
  173 000000DA         SaiDecrementaValor
  174 000000DA 4770            BX               LR
  175 000000DC         
  176 000000DC         
  177 000000DC         AumentaDezena
  178 000000DC F10A 0A01       ADD              R10, #1
  179 000000E0 F1BA 0F0A       CMP              R10, #10
  180 000000E4 BFA8            IT               GE
  181 000000E6 F04F 0A00       MOVGE            R10, #0
  182 000000EA 4770            BX               LR
  183 000000EC         
  184 000000EC         DiminuiDezena
  185 000000EC F1AA 0A01       SUB              R10, #1
  186 000000F0 F1BA 0F00       CMP              R10, #0
  187 000000F4 BFB8            IT               LT
  188 000000F6 F04F 0A09       MOVLT            R10, #9
  189 000000FA 4770            BX               LR
  190 000000FC         
  191 000000FC         
  192 000000FC         AtualizaValorDisplay
  193 000000FC F04F 0700       MOV              R7, #0
  194 00000100 B500            PUSH             {LR}
  195 00000102         
  196 00000102 42BD            CMP              R5, R7
  197 00000104 BF04            ITT              EQ
  198 00000106 243F            MOVEQ            R4, #DIGITO_0
  199 00000108 F7FF FFFE       BLEQ             PortAQ_Output
  200 0000010C         
  201 0000010C F107 0701       ADD              R7, #1
  202 00000110 42BD            CMP              R5, R7
  203 00000112 BF04            ITT              EQ
  204 00000114 2406            MOVEQ            R4, #DIGITO_1
  205 00000116 F7FF FFFE       BLEQ             PortAQ_Output
  206 0000011A         
  207 0000011A F107 0701       ADD              R7, #1
  208 0000011E 42BD            CMP              R5, R7
  209 00000120 BF04            ITT              EQ
  210 00000122 245B            MOVEQ            R4, #DIGITO_2
  211 00000124 F7FF FFFE       BLEQ             PortAQ_Output
  212 00000128         
  213 00000128 F107 0701       ADD              R7, #1
  214 0000012C 42BD            CMP              R5, R7
  215 0000012E BF04            ITT              EQ
  216 00000130 244F            MOVEQ            R4, #DIGITO_3
  217 00000132 F7FF FFFE       BLEQ             PortAQ_Output
  218 00000136         
  219 00000136 F107 0701       ADD              R7, #1
  220 0000013A 42BD            CMP              R5, R7
  221 0000013C BF04            ITT              EQ
  222 0000013E 2466            MOVEQ            R4, #DIGITO_4
  223 00000140 F7FF FFFE       BLEQ             PortAQ_Output
  224 00000144         
  225 00000144 F107 0701       ADD              R7, #1



ARM Macro Assembler    Page 6 


  226 00000148 42BD            CMP              R5, R7
  227 0000014A BF04            ITT              EQ
  228 0000014C 246D            MOVEQ            R4, #DIGITO_5
  229 0000014E F7FF FFFE       BLEQ             PortAQ_Output
  230 00000152         
  231 00000152 F107 0701       ADD              R7, #1
  232 00000156 42BD            CMP              R5, R7
  233 00000158 BF04            ITT              EQ
  234 0000015A 247D            MOVEQ            R4, #DIGITO_6
  235 0000015C F7FF FFFE       BLEQ             PortAQ_Output
  236 00000160         
  237 00000160 F107 0701       ADD              R7, #1
  238 00000164 42BD            CMP              R5, R7
  239 00000166 BF04            ITT              EQ
  240 00000168 2407            MOVEQ            R4, #DIGITO_7
  241 0000016A F7FF FFFE       BLEQ             PortAQ_Output
  242 0000016E         
  243 0000016E F107 0701       ADD              R7, #1
  244 00000172 42BD            CMP              R5, R7
  245 00000174 BF04            ITT              EQ
  246 00000176 247F            MOVEQ            R4, #DIGITO_8
  247 00000178 F7FF FFFE       BLEQ             PortAQ_Output
  248 0000017C         
  249 0000017C F107 0701       ADD              R7, #1
  250 00000180 42BD            CMP              R5, R7
  251 00000182 BF04            ITT              EQ
  252 00000184 246F            MOVEQ            R4, #DIGITO_9
  253 00000186 F7FF FFFE       BLEQ             PortAQ_Output
  254 0000018A         
  255 0000018A F85D EB04       POP              {LR}
  256 0000018E 4770            BX               LR
  257 00000190         
  258 00000190         
  259 00000190         EsperaXms                            ; usa o R0 como val
                                                            or de espera
  260 00000190 B500            PUSH             {LR}
  261 00000192 F7FF FFFE       BL               SysTick_Wait1ms
  262 00000196 F85D EB04       POP              {LR}
  263 0000019A         
  264 0000019A 4770            BX               LR
  265 0000019C         
  266 0000019C         
  267 0000019C         
  268 0000019C         
  269 0000019C         
  270 0000019C         
  271 0000019C         
  272 0000019C         
  273 0000019C         
  274 0000019C         
  275 0000019C         
  276 0000019C         Verifica_Nenhuma
  277 0000019C 2803            CMP              R0, #2_00000011 ;Verifica se ne
                                                            nhuma chave está pr
                                                            essionada
  278 0000019E F47F AF40       BNE              Verifica_SW1 ;Se o teste viu qu
                                                            e tem pelo menos al
                                                            guma chave pression
                                                            ada pula



ARM Macro Assembler    Page 7 


  279 000001A2 F000 F819       BL               ApagaLeds
  280 000001A6         ;MOV R0, #0                   ;Não acender nenhum LED
  281 000001A6         ;BL PortN_Output      ;Chamar a função para não acender 
                       nenhum LED
  282 000001A6 E738            B                MainLoop    ;Se o teste viu que
                                                             nenhuma chave está
                                                             pressionada, volta
                                                             para o laço princi
                                                            pal
  283 000001A8         
  284 000001A8         
  285 000001A8         
  286 000001A8         
  287 000001A8         
  288 000001A8         AcendeLed1
  289 000001A8 B500            PUSH             {LR}
  290 000001AA F04F 0002       MOV              R0, #2_00000010 ; Acende o prim
                                                            eiro LED apenas
  291 000001AE F7FF FFFE       BL               PortN_Output
  292 000001B2 F85D EB04       POP              {LR}
  293 000001B6         
  294 000001B6 4770            BX               LR
  295 000001B8         
  296 000001B8         AcendeLed2
  297 000001B8 B500            PUSH             {LR}
  298 000001BA F04F 0001       MOV              R0, #2_00000001 ; Acende o segu
                                                            ndo LED apenas
  299 000001BE F7FF FFFE       BL               PortN_Output
  300 000001C2 F85D EB04       POP              {LR}
  301 000001C6         
  302 000001C6 4770            BX               LR
  303 000001C8         
  304 000001C8         AcendeTodosLeds
  305 000001C8 B500            PUSH             {LR}
  306 000001CA F04F 0003       MOV              R0, #2_00000011 ; Acende os doi
                                                            s leds
  307 000001CE F7FF FFFE       BL               PortN_Output
  308 000001D2 F85D EB04       POP              {LR}
  309 000001D6         
  310 000001D6 4770            BX               LR
  311 000001D8         
  312 000001D8         ApagaLeds
  313 000001D8 B500            PUSH             {LR}
  314 000001DA F04F 0000       MOV              R0, #0      ;Não acende nenhum 
                                                            LED
  315 000001DE F7FF FFFE       BL               PortN_Output
  316 000001E2 F85D EB04       POP              {LR}
  317 000001E6         
  318 000001E6 4770            BX               LR
  319 000001E8         
  320 000001E8         
  321 000001E8         ; Funcao para ativar o transistor de controle do ativame
                       nto dos displays
  322 000001E8         AtivaTransistorB
  323 000001E8 B500            PUSH             {LR}
  324 000001EA F04F 0001       MOV              R0, #1      ; define o tempo de
                                                             espera
  325 000001EE F7FF FFCF       BL               EsperaXms
  326 000001F2         



ARM Macro Assembler    Page 8 


  327 000001F2 F7FF FFFE       BL               PortB_Output
  328 000001F6         
  329 000001F6 F04F 0001       MOV              R0, #1
  330 000001FA F7FF FFC9       BL               EsperaXms
  331 000001FE         
  332 000001FE F04F 0500       MOV              R5, #0
  333 00000202 F7FF FFFE       BL               PortB_Output
  334 00000206         
  335 00000206 F85D EB04       POP              {LR}
  336 0000020A 4770            BX               LR
  337 0000020C         
  338 0000020C         
  339 0000020C         ; Funcao para ativar o transistor de controle dos leds d
                       a PAT
  340 0000020C         AtivaTransistorP
  341 0000020C B500            PUSH             {LR}
  342 0000020E F04F 000A       MOV              R0, #10
  343 00000212 F7FF FFBD       BL               EsperaXms
  344 00000216         
  345 00000216 F7FF FFFE       BL               PortP_Output
  346 0000021A         
  347 0000021A F04F 000A       MOV              R0, #10
  348 0000021E F7FF FFB7       BL               EsperaXms
  349 00000222         
  350 00000222 F04F 0500       MOV              R5, #0
  351 00000226 F7FF FFFE       BL               PortP_Output
  352 0000022A         
  353 0000022A F85D EB04       POP              {LR}
  354 0000022E 4770            BX               LR          ;return
  355 00000230         
  356 00000230         
  357 00000230         
  358 00000230         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  359 00000230         ; Fim do Arquivo
  360 00000230         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  361 00000230                 ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  362 00000230                 END                          ;Fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\rafa1\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 29 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 40 in file main.s
   Uses
      None
Comment: .text unused
AcendeLed1 000001A8

Symbol: AcendeLed1
   Definitions
      At line 288 in file main.s
   Uses
      At line 83 in file main.s
      At line 93 in file main.s

AcendeLed2 000001B8

Symbol: AcendeLed2
   Definitions
      At line 296 in file main.s
   Uses
      None
Comment: AcendeLed2 unused
AcendeTodosLeds 000001C8

Symbol: AcendeTodosLeds
   Definitions
      At line 304 in file main.s
   Uses
      None
Comment: AcendeTodosLeds unused
ApagaLeds 000001D8

Symbol: ApagaLeds
   Definitions
      At line 312 in file main.s
   Uses
      At line 279 in file main.s
Comment: ApagaLeds used once
AtivaTransistorB 000001E8

Symbol: AtivaTransistorB
   Definitions
      At line 322 in file main.s
   Uses
      None
Comment: AtivaTransistorB unused
AtivaTransistorP 0000020C

Symbol: AtivaTransistorP
   Definitions
      At line 340 in file main.s
   Uses
      None
Comment: AtivaTransistorP unused
AtualizaValorDisplay 000000FC




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: AtualizaValorDisplay
   Definitions
      At line 192 in file main.s
   Uses
      At line 72 in file main.s
      At line 123 in file main.s
      At line 130 in file main.s

AumentaDezena 000000DC

Symbol: AumentaDezena
   Definitions
      At line 177 in file main.s
   Uses
      At line 150 in file main.s
Comment: AumentaDezena used once
DecrementaValor 000000BA

Symbol: DecrementaValor
   Definitions
      At line 157 in file main.s
   Uses
      At line 94 in file main.s
Comment: DecrementaValor used once
DiminuiDezena 000000EC

Symbol: DiminuiDezena
   Definitions
      At line 184 in file main.s
   Uses
      At line 170 in file main.s
Comment: DiminuiDezena used once
DiminuiValor 000000C6

Symbol: DiminuiValor
   Definitions
      At line 165 in file main.s
   Uses
      At line 161 in file main.s
Comment: DiminuiValor used once
EsperaXms 00000190

Symbol: EsperaXms
   Definitions
      At line 259 in file main.s
   Uses
      At line 86 in file main.s
      At line 97 in file main.s
      At line 126 in file main.s
      At line 133 in file main.s
      At line 325 in file main.s
      At line 330 in file main.s
      At line 343 in file main.s
      At line 348 in file main.s

IncrementaValor 0000009C

Symbol: IncrementaValor
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 139 in file main.s
   Uses
      At line 84 in file main.s
Comment: IncrementaValor used once
LigaDezenas 00000060

Symbol: LigaDezenas
   Definitions
      At line 111 in file main.s
   Uses
      At line 131 in file main.s
Comment: LigaDezenas used once
LigaUnidades 00000050

Symbol: LigaUnidades
   Definitions
      At line 104 in file main.s
   Uses
      At line 124 in file main.s
Comment: LigaUnidades used once
MainLoop 0000001A

Symbol: MainLoop
   Definitions
      At line 74 in file main.s
   Uses
      At line 91 in file main.s
      At line 99 in file main.s
      At line 282 in file main.s

RefreshDisplay 00000070

Symbol: RefreshDisplay
   Definitions
      At line 118 in file main.s
   Uses
      At line 75 in file main.s
Comment: RefreshDisplay used once
SaiDecrementaValor 000000DA

Symbol: SaiDecrementaValor
   Definitions
      At line 173 in file main.s
   Uses
      At line 163 in file main.s
      At line 168 in file main.s

SaiIncrementaValor 000000B8

Symbol: SaiIncrementaValor
   Definitions
      At line 153 in file main.s
   Uses
      At line 143 in file main.s
      At line 147 in file main.s

Start 00000000

Symbol: Start



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 62 in file main.s
   Uses
      At line 43 in file main.s
Comment: Start used once
Verifica_Nenhuma 0000019C

Symbol: Verifica_Nenhuma
   Definitions
      At line 276 in file main.s
   Uses
      None
Comment: Verifica_Nenhuma unused
Verifica_SW1 00000022

Symbol: Verifica_SW1
   Definitions
      At line 79 in file main.s
   Uses
      At line 278 in file main.s
Comment: Verifica_SW1 used once
Verifica_SW2 00000038

Symbol: Verifica_SW2
   Definitions
      At line 89 in file main.s
   Uses
      At line 81 in file main.s
Comment: Verifica_SW2 used once
24 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DIGITO_0 0000003F

Symbol: DIGITO_0
   Definitions
      At line 16 in file main.s
   Uses
      At line 198 in file main.s
Comment: DIGITO_0 used once
DIGITO_1 00000006

Symbol: DIGITO_1
   Definitions
      At line 17 in file main.s
   Uses
      At line 204 in file main.s
Comment: DIGITO_1 used once
DIGITO_2 0000005B

Symbol: DIGITO_2
   Definitions
      At line 18 in file main.s
   Uses
      At line 210 in file main.s
Comment: DIGITO_2 used once
DIGITO_3 0000004F

Symbol: DIGITO_3
   Definitions
      At line 19 in file main.s
   Uses
      At line 216 in file main.s
Comment: DIGITO_3 used once
DIGITO_4 00000066

Symbol: DIGITO_4
   Definitions
      At line 20 in file main.s
   Uses
      At line 222 in file main.s
Comment: DIGITO_4 used once
DIGITO_5 0000006D

Symbol: DIGITO_5
   Definitions
      At line 21 in file main.s
   Uses
      At line 228 in file main.s
Comment: DIGITO_5 used once
DIGITO_6 0000007D

Symbol: DIGITO_6
   Definitions
      At line 22 in file main.s
   Uses
      At line 234 in file main.s
Comment: DIGITO_6 used once
DIGITO_7 00000007

Symbol: DIGITO_7



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 23 in file main.s
   Uses
      At line 240 in file main.s
Comment: DIGITO_7 used once
DIGITO_8 0000007F

Symbol: DIGITO_8
   Definitions
      At line 24 in file main.s
   Uses
      At line 246 in file main.s
Comment: DIGITO_8 used once
DIGITO_9 0000006F

Symbol: DIGITO_9
   Definitions
      At line 25 in file main.s
   Uses
      At line 252 in file main.s
Comment: DIGITO_9 used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 52 in file main.s
   Uses
      At line 65 in file main.s
Comment: GPIO_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 49 in file main.s
   Uses
      At line 63 in file main.s
Comment: PLL_Init used once
PortAQ_Output 00000000

Symbol: PortAQ_Output
   Definitions
      At line 53 in file main.s
   Uses
      At line 199 in file main.s
      At line 205 in file main.s
      At line 211 in file main.s
      At line 217 in file main.s
      At line 223 in file main.s
      At line 229 in file main.s
      At line 235 in file main.s
      At line 241 in file main.s
      At line 247 in file main.s
      At line 253 in file main.s

PortB_Output 00000000

Symbol: PortB_Output
   Definitions
      At line 54 in file main.s
   Uses
      At line 107 in file main.s
      At line 114 in file main.s
      At line 327 in file main.s
      At line 333 in file main.s

PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 55 in file main.s
   Uses
      At line 76 in file main.s
Comment: PortJ_Input used once
PortN_Output 00000000

Symbol: PortN_Output
   Definitions
      At line 56 in file main.s
   Uses
      At line 291 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 299 in file main.s
      At line 307 in file main.s
      At line 315 in file main.s

PortP_Output 00000000

Symbol: PortP_Output
   Definitions
      At line 57 in file main.s
   Uses
      At line 345 in file main.s
      At line 351 in file main.s

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 50 in file main.s
   Uses
      At line 64 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 51 in file main.s
   Uses
      At line 261 in file main.s
Comment: SysTick_Wait1ms used once
9 symbols
378 symbols in table
