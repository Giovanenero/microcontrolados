


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 24/08/2020
    5 00000000         ; Este programa espera o usuário apertar a chave USR_SW1
                       .
    6 00000000         ; Caso o usuário pressione a chave, o LED1 piscará a cad
                       a 0,5 segundo.
    7 00000000         
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   10 00000000         ; ------------------------------------------------------
                       -------------------------
   11 00000000         
   12 00000000         ; Declarações EQU - Defines
   13 00000000         ;<NOME>         EQU <VALOR>
   14 00000000         ; ========================
   15 00000000         
   16 00000000         ; ------------------------------------------------------
                       -------------------------
   17 00000000         ; Área de Dados - Declarações de variáveis
   18 00000000                 AREA             DATA, ALIGN=2
   19 00000000         ; Se alguma variável for chamada em outro arquivo
   20 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   21 00000000         ; partir de outro arquivo
   22 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   23 00000000         ; de <tam> bytes a partir da primeira 
   24 00000000         ; posição da RAM  
   25 00000000         
   26 00000000         ; ------------------------------------------------------
                       -------------------------
   27 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   28 00000000         ;                  código
   29 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   30 00000000         
   31 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   32 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   33 00000000         ; outro arquivo. No caso startup.s
   34 00000000         
   35 00000000         ; Se chamar alguma função externa 
   36 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   37 00000000         ; função <func>
   38 00000000                 IMPORT           PLL_Init
   39 00000000                 IMPORT           SysTick_Init
   40 00000000                 IMPORT           SysTick_Wait1ms
   41 00000000                 IMPORT           GPIO_Init
   42 00000000                 IMPORT           PortN_Output
   43 00000000                 IMPORT           PortJ_Input
   44 00000000         



ARM Macro Assembler    Page 2 


   45 00000000         
   46 00000000         ; ------------------------------------------------------
                       -------------------------
   47 00000000         ; Função main()
   48 00000000         Start
   49 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   50 00000004 F7FF FFFE       BL               SysTick_Init
   51 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   52 0000000C         
   53 0000000C         MainLoop
   54 0000000C F7FF FFFE       BL               PortJ_Input ;Chama a subrotina 
                                                            que lê o estado das
                                                             chaves e coloca o 
                                                            resultado em R0
   55 00000010         ; SW1 PRESSIONADA = 10 == 0x02
   56 00000010         ; SW2 PRESSIODADA = 01 = 0x01
   57 00000010         ; AMBAS PRESSIONADAS = 00 == 0x00
   58 00000010         ; NENHUMA PRESSIONADA = 11 == 0x03
   59 00000010         
   60 00000010         Verifica_Nenhuma
   61 00000010 2803            CMP              R0, #2_00000011 ;Verifica se ne
                                                            nhuma chave está pr
                                                            essionada
   62 00000012 D104            BNE              Verifica_SW1 ;Se o teste viu qu
                                                            e tem pelo menos al
                                                            guma chave pression
                                                            ada pula
   63 00000014 F04F 0000       MOV              R0, #0      ;Não acender nenhum
                                                             LED
   64 00000018 F7FF FFFE       BL               PortN_Output ;Chamar a função p
                                                            ara não acender nen
                                                            hum LED
   65 0000001C E7F6            B                MainLoop    ;Se o teste viu que
                                                             nenhuma chave está
                                                             pressionada, volta
                                                             para o laço princi
                                                            pal
   66 0000001E         Verifica_SW1
   67 0000001E 2802            CMP              R0, #2_00000010 ;Verifica se so
                                                            mente a chave SW1 e
                                                            stá pressionada
   68 00000020 D1F4            BNE              MainLoop    ;Se o teste falhou,
                                                             volta para o iníci
                                                            o do laço principal
                                                            
   69 00000022         ; BL Pisca_LED     ;Chama a rotina para piscar LED
   70 00000022 F04F 0003       MOV              R0, #2_00000011 ;Setar o parâme
                                                            tro de entrada da f
                                                            unção como o BIT4
   71 00000026 F7FF FFFE       BL               PortN_Output
   72 0000002A         
   73 0000002A E7EF            B                MainLoop    ;Volta para o laço 
                                                            principal
   74 0000002C         



ARM Macro Assembler    Page 3 


   75 0000002C         
   76 0000002C         ;-------------------------------------------------------
                       -------------------------
   77 0000002C         ; Função Pisca_LED
   78 0000002C         ; Parâmetro de entrada: Não tem
   79 0000002C         ; Parâmetro de saída: Não tem
   80 0000002C         Pisca_LED
   81 0000002C F04F 0003       MOV              R0, #2_11   ;Setar o parâmetro 
                                                            de entrada da funçã
                                                            o setando o BIT1
   82 00000030 B500            PUSH             {LR}
   83 00000032 F7FF FFFE       BL               PortN_Output ;Chamar a função p
                                                            ara acender o LED1
   84 00000036 F44F 70FA       MOV              R0, #500    ;Chamar a rotina pa
                                                            ra esperar 0,5s
   85 0000003A F7FF FFFE       BL               SysTick_Wait1ms
   86 0000003E F04F 0000       MOV              R0, #0      ;Setar o parâmetro 
                                                            de entrada da funçã
                                                            o apagando o BIT1
   87 00000042 F7FF FFFE       BL               PortN_Output ;Chamar a rotina p
                                                            ara apagar o LED
   88 00000046 F44F 70FA       MOV              R0, #500    ;Chamar a rotina pa
                                                            ra esperar 0,5
   89 0000004A F7FF FFFE       BL               SysTick_Wait1ms
   90 0000004E F85D EB04       POP              {LR}
   91 00000052 4770            BX               LR          ;return
   92 00000054         
   93 00000054         
   94 00000054         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
   95 00000054         ; Fim do Arquivo
   96 00000054         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
   97 00000054                 ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
   98 00000054                 END                          ;Fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\rafa1\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 29 in file main.s
   Uses
      None
Comment: .text unused
MainLoop 0000000C

Symbol: MainLoop
   Definitions
      At line 53 in file main.s
   Uses
      At line 65 in file main.s
      At line 68 in file main.s
      At line 73 in file main.s

Pisca_LED 0000002C

Symbol: Pisca_LED
   Definitions
      At line 80 in file main.s
   Uses
      None
Comment: Pisca_LED unused
Start 00000000

Symbol: Start
   Definitions
      At line 48 in file main.s
   Uses
      At line 32 in file main.s
Comment: Start used once
Verifica_Nenhuma 00000010

Symbol: Verifica_Nenhuma
   Definitions
      At line 60 in file main.s
   Uses
      None
Comment: Verifica_Nenhuma unused
Verifica_SW1 0000001E

Symbol: Verifica_SW1
   Definitions
      At line 66 in file main.s
   Uses
      At line 62 in file main.s
Comment: Verifica_SW1 used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 41 in file main.s
   Uses
      At line 51 in file main.s
Comment: GPIO_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 38 in file main.s
   Uses
      At line 49 in file main.s
Comment: PLL_Init used once
PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 43 in file main.s
   Uses
      At line 54 in file main.s
Comment: PortJ_Input used once
PortN_Output 00000000

Symbol: PortN_Output
   Definitions
      At line 42 in file main.s
   Uses
      At line 64 in file main.s
      At line 71 in file main.s
      At line 83 in file main.s
      At line 87 in file main.s

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 39 in file main.s
   Uses
      At line 50 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 40 in file main.s
   Uses
      At line 85 in file main.s
      At line 89 in file main.s

6 symbols
347 symbols in table
