


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 24/08/2020
    5 00000000         ; Este programa espera o usuário apertar a chave USR_SW1
                       .
    6 00000000         ; Caso o usuário pressione a chave, o LED1 piscará a cad
                       a 0,5 segundo.
    7 00000000         
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   10 00000000         ; ------------------------------------------------------
                       -------------------------
   11 00000000         
   12 00000000         ; Declarações EQU - Defines
   13 00000000         ;<NOME>         EQU <VALOR>
   14 00000000         ; ========================
   15 00000000         
   16 00000000         ; ------------------------------------------------------
                       -------------------------
   17 00000000         ; Área de Dados - Declarações de variáveis
   18 00000000                 AREA             DATA, ALIGN=2
   19 00000000         ; Se alguma variável for chamada em outro arquivo
   20 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   21 00000000         ; partir de outro arquivo
   22 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   23 00000000         ; de <tam> bytes a partir da primeira 
   24 00000000         ; posição da RAM  
   25 00000000         
   26 00000000         ; ------------------------------------------------------
                       -------------------------
   27 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   28 00000000         ;                  código
   29 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   30 00000000         
   31 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   32 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   33 00000000         ; outro arquivo. No caso startup.s
   34 00000000         
   35 00000000         ; Se chamar alguma função externa 
   36 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   37 00000000         ; função <func>
   38 00000000                 IMPORT           PLL_Init
   39 00000000                 IMPORT           SysTick_Init
   40 00000000                 IMPORT           SysTick_Wait1ms
   41 00000000                 IMPORT           GPIO_Init
   42 00000000                 IMPORT           PortAQ_Output
   43 00000000                 IMPORT           PortB_Output
   44 00000000                 IMPORT           PortJ_Input



ARM Macro Assembler    Page 2 


   45 00000000                 IMPORT           PortN_Output
   46 00000000                 IMPORT           PortP_Output
   47 00000000         
   48 00000000         
   49 00000000         ; ------------------------------------------------------
                       -------------------------
   50 00000000         ; Função main()
   51 00000000         Start
   52 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   53 00000004 F7FF FFFE       BL               SysTick_Init
   54 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   55 0000000C         
   56 0000000C         
   57 0000000C         MainLoop
   58 0000000C F7FF FFFE       BL               PortJ_Input ;Chama a subrotina 
                                                            que lê o estado das
                                                             chaves e coloca o 
                                                            resultado em R0
   59 00000010         ; SW1 PRESSIONADA = 10 == 0x02
   60 00000010         ; SW2 PRESSIODADA = 01 = 0x01
   61 00000010         ; AMBAS PRESSIONADAS = 00 == 0x00
   62 00000010         ; NENHUMA PRESSIONADA = 11 == 0x03
   63 00000010         
   64 00000010         Verifica_Nenhuma
   65 00000010 2803            CMP              R0, #2_00000011 ;Verifica se ne
                                                            nhuma chave está pr
                                                            essionada
   66 00000012 D102            BNE              Verifica_SW1 ;Se o teste viu qu
                                                            e tem pelo menos al
                                                            guma chave pression
                                                            ada pula
   67 00000014 F000 F822       BL               ApagaLeds
   68 00000018         ;MOV R0, #0                   ;Não acender nenhum LED
   69 00000018         ;BL PortN_Output      ;Chamar a função para não acender 
                       nenhum LED
   70 00000018 E7F8            B                MainLoop    ;Se o teste viu que
                                                             nenhuma chave está
                                                             pressionada, volta
                                                             para o laço princi
                                                            pal
   71 0000001A         
   72 0000001A         Verifica_SW1
   73 0000001A 2802            CMP              R0, #2_00000010 ;Verifica se so
                                                            mente a chave SW1 e
                                                            stá pressionada
   74 0000001C D1F6            BNE              MainLoop    ;Se o teste falhou,
                                                             volta para o iníci
                                                            o do laço principal
                                                            
   75 0000001E         
   76 0000001E F000 F805       BL               AcendeLed1
   77 00000022         
   78 00000022 F44F 707A       MOV              R0, #1000   ; define o tempo de
                                                             espera



ARM Macro Assembler    Page 3 


   79 00000026 F000 F829       BL               EsperaXms
   80 0000002A         
   81 0000002A E7EF            B                MainLoop    ;Volta para o laço 
                                                            principal
   82 0000002C         
   83 0000002C         
   84 0000002C         
   85 0000002C         
   86 0000002C         
   87 0000002C         
   88 0000002C         AcendeLed1
   89 0000002C B500            PUSH             {LR}
   90 0000002E F04F 0002       MOV              R0, #2_00000010 ; Acende o prim
                                                            eiro LED apenas
   91 00000032 F7FF FFFE       BL               PortN_Output
   92 00000036 F85D EB04       POP              {LR}
   93 0000003A         
   94 0000003A 4770            BX               LR
   95 0000003C         
   96 0000003C         AcendeLed2
   97 0000003C B500            PUSH             {LR}
   98 0000003E F04F 0001       MOV              R0, #2_00000001 ; Acende o segu
                                                            ndo LED apenas
   99 00000042 F7FF FFFE       BL               PortN_Output
  100 00000046 F85D EB04       POP              {LR}
  101 0000004A         
  102 0000004A 4770            BX               LR
  103 0000004C         
  104 0000004C         AcendeTodosLeds
  105 0000004C B500            PUSH             {LR}
  106 0000004E F04F 0003       MOV              R0, #2_00000011 ; Acende os doi
                                                            s leds
  107 00000052 F7FF FFFE       BL               PortN_Output
  108 00000056 F85D EB04       POP              {LR}
  109 0000005A         
  110 0000005A 4770            BX               LR
  111 0000005C         
  112 0000005C         ApagaLeds
  113 0000005C B500            PUSH             {LR}
  114 0000005E F04F 0000       MOV              R0, #0      ;Não acende nenhum 
                                                            LED
  115 00000062 F7FF FFFE       BL               PortN_Output
  116 00000066 F85D EB04       POP              {LR}
  117 0000006A         
  118 0000006A 4770            BX               LR
  119 0000006C         
  120 0000006C         Espera1Segundo
  121 0000006C B500            PUSH             {LR}
  122 0000006E F44F 707A       MOV              R0, #1000   ;Chamar a rotina pa
                                                            ra esperar 0,5s
  123 00000072 F7FF FFFE       BL               SysTick_Wait1ms
  124 00000076 F85D EB04       POP              {LR}
  125 0000007A         
  126 0000007A 4770            BX               LR
  127 0000007C         
  128 0000007C         EsperaXms                            ; usa o R0 como val
                                                            or de espera
  129 0000007C B500            PUSH             {LR}
  130 0000007E F7FF FFFE       BL               SysTick_Wait1ms



ARM Macro Assembler    Page 4 


  131 00000082 F85D EB04       POP              {LR}
  132 00000086         
  133 00000086 4770            BX               LR
  134 00000088         
  135 00000088         ; Funcao para ativar o transistor de controle do ativame
                       nto dos displays
  136 00000088         AtivaTransistorB
  137 00000088 B500            PUSH             {LR}
  138 0000008A F04F 000A       MOV              R0, #10     ; define o tempo de
                                                             espera
  139 0000008E F7FF FFF5       BL               EsperaXms
  140 00000092         
  141 00000092 F7FF FFFE       BL               PortB_Output
  142 00000096         
  143 00000096 F04F 000A       MOV              R0, #10
  144 0000009A F7FF FFEF       BL               EsperaXms
  145 0000009E         
  146 0000009E F04F 0500       MOV              R5, #0
  147 000000A2 F7FF FFFE       BL               PortB_Output
  148 000000A6         
  149 000000A6 F85D EB04       POP              {LR}
  150 000000AA 4770            BX               LR          ;return
  151 000000AC         
  152 000000AC         
  153 000000AC         ; Funcao para ativar o transistor de controle dos leds d
                       a PAT
  154 000000AC         AtivaTransistorP                     ; controle dos leds
                                                             da PAT
  155 000000AC         
  156 000000AC         
  157 000000AC         
  158 000000AC         
  159 000000AC         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  160 000000AC         ; Fim do Arquivo
  161 000000AC         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  162 000000AC                 ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  163 000000AC                 END                          ;Fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\rafa1\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 29 in file main.s
   Uses
      None
Comment: .text unused
AcendeLed1 0000002C

Symbol: AcendeLed1
   Definitions
      At line 88 in file main.s
   Uses
      At line 76 in file main.s
Comment: AcendeLed1 used once
AcendeLed2 0000003C

Symbol: AcendeLed2
   Definitions
      At line 96 in file main.s
   Uses
      None
Comment: AcendeLed2 unused
AcendeTodosLeds 0000004C

Symbol: AcendeTodosLeds
   Definitions
      At line 104 in file main.s
   Uses
      None
Comment: AcendeTodosLeds unused
ApagaLeds 0000005C

Symbol: ApagaLeds
   Definitions
      At line 112 in file main.s
   Uses
      At line 67 in file main.s
Comment: ApagaLeds used once
AtivaTransistorB 00000088

Symbol: AtivaTransistorB
   Definitions
      At line 136 in file main.s
   Uses
      None
Comment: AtivaTransistorB unused
AtivaTransistorP 000000AC

Symbol: AtivaTransistorP
   Definitions
      At line 154 in file main.s
   Uses
      None
Comment: AtivaTransistorP unused
Espera1Segundo 0000006C

Symbol: Espera1Segundo



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 120 in file main.s
   Uses
      None
Comment: Espera1Segundo unused
EsperaXms 0000007C

Symbol: EsperaXms
   Definitions
      At line 128 in file main.s
   Uses
      At line 79 in file main.s
      At line 139 in file main.s
      At line 144 in file main.s

MainLoop 0000000C

Symbol: MainLoop
   Definitions
      At line 57 in file main.s
   Uses
      At line 70 in file main.s
      At line 74 in file main.s
      At line 81 in file main.s

Start 00000000

Symbol: Start
   Definitions
      At line 51 in file main.s
   Uses
      At line 32 in file main.s
Comment: Start used once
Verifica_Nenhuma 00000010

Symbol: Verifica_Nenhuma
   Definitions
      At line 64 in file main.s
   Uses
      None
Comment: Verifica_Nenhuma unused
Verifica_SW1 0000001A

Symbol: Verifica_SW1
   Definitions
      At line 72 in file main.s
   Uses
      At line 66 in file main.s
Comment: Verifica_SW1 used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 41 in file main.s
   Uses
      At line 54 in file main.s
Comment: GPIO_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 38 in file main.s
   Uses
      At line 52 in file main.s
Comment: PLL_Init used once
PortAQ_Output 00000000

Symbol: PortAQ_Output
   Definitions
      At line 42 in file main.s
   Uses
      None
Comment: PortAQ_Output unused
PortB_Output 00000000

Symbol: PortB_Output
   Definitions
      At line 43 in file main.s
   Uses
      At line 141 in file main.s
      At line 147 in file main.s

PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 44 in file main.s
   Uses
      At line 58 in file main.s
Comment: PortJ_Input used once
PortN_Output 00000000

Symbol: PortN_Output
   Definitions
      At line 45 in file main.s
   Uses
      At line 91 in file main.s
      At line 99 in file main.s
      At line 107 in file main.s
      At line 115 in file main.s

PortP_Output 00000000

Symbol: PortP_Output
   Definitions
      At line 46 in file main.s
   Uses
      None



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Comment: PortP_Output unused
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 39 in file main.s
   Uses
      At line 53 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 40 in file main.s
   Uses
      At line 123 in file main.s
      At line 130 in file main.s

9 symbols
357 symbols in table
