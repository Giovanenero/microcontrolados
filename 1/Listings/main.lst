


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 24/08/2020
    5 00000000         ; Este programa espera o usuário apertar a chave USR_SW1
                       .
    6 00000000         ; Caso o usuário pressione a chave, o LED1 piscará a cad
                       a 0,5 segundo.
    7 00000000         
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   10 00000000         ; ------------------------------------------------------
                       -------------------------
   11 00000000         
   12 00000000         ; Declarações EQU - Defines
   13 00000000         ;<NOME>         EQU <VALOR>
   14 00000000         ; ========================
   15 00000000         
   16 00000000 0000003F 
                       DIGITO_0
                               EQU              2_0111111
   17 00000000 00000006 
                       DIGITO_1
                               EQU              2_0000110
   18 00000000 0000005B 
                       DIGITO_2
                               EQU              2_1011011
   19 00000000 0000004F 
                       DIGITO_3
                               EQU              2_1001111
   20 00000000 00000066 
                       DIGITO_4
                               EQU              2_1100110
   21 00000000 0000006D 
                       DIGITO_5
                               EQU              2_1101101
   22 00000000 0000007D 
                       DIGITO_6
                               EQU              2_1111101
   23 00000000 00000007 
                       DIGITO_7
                               EQU              2_0000111
   24 00000000 0000007F 
                       DIGITO_8
                               EQU              2_1111111
   25 00000000 0000006F 
                       DIGITO_9
                               EQU              2_1101111
   26 00000000 00000005 
                       LIMIT_MIM_TEMP_ALVO
                               EQU              5
   27 00000000 00000032 
                       LIMIT_MAX_TEMP_ALVO
                               EQU              50
   28 00000000 20000404 
                       ADDRESS_ALVO
                               EQU              0x20000404



ARM Macro Assembler    Page 2 


   29 00000000 20000400 
                       ADDRESS_CURRENT
                               EQU              0x20000400
   30 00000000 20000600 
                       DISPLAY_DEZENA
                               EQU              0x20000600
   31 00000000 20000604 
                       DISPLAY_UNIDADE
                               EQU              0x20000604
   32 00000000         
   33 00000000         
   34 00000000         ; ------------------------------------------------------
                       -------------------------
   35 00000000         ; Área de Dados - Declarações de variáveis
   36 00000000                 AREA             DATA, ALIGN=2
   37 00000000         ; Se alguma variável for chamada em outro arquivo
   38 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   39 00000000         ; partir de outro arquivo
   40 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   41 00000000         ; de <tam> bytes a partir da primeira 
   42 00000000         ; posição da RAM  
   43 00000000         
   44 00000000         ; ------------------------------------------------------
                       -------------------------
   45 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   46 00000000         ;                  código
   47 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   48 00000000         
   49 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   50 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   51 00000000         ; outro arquivo. No caso startup.s
   52 00000000         
   53 00000000         ; Se chamar alguma função externa 
   54 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   55 00000000         ; função <func>
   56 00000000                 IMPORT           PLL_Init
   57 00000000                 IMPORT           SysTick_Init
   58 00000000                 IMPORT           SysTick_Wait1ms
   59 00000000                 IMPORT           GPIO_Init
   60 00000000                 IMPORT           PortAQ_Output
   61 00000000                 IMPORT           PortB_Output
   62 00000000                 IMPORT           PortJ_Input
   63 00000000                 IMPORT           PortN_Output
   64 00000000                 IMPORT           PortP_Output
   65 00000000         
   66 00000000         
   67 00000000         ; ------------------------------------------------------
                       -------------------------
   68 00000000         ; Função main()
   69 00000000         Start
   70 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 



ARM Macro Assembler    Page 3 


                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   71 00000004 F7FF FFFE       BL               SysTick_Init
   72 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   73 0000000C F000 F801       BL               inicializaMemoria
   74 00000010         
   75 00000010 E012            B                MainLoop
   76 00000012         
   77 00000012         inicializaMemoria
   78 00000012         ; Temperatura alvo
   79 00000012 F04F 0819       MOV              R8, #25
   80 00000016         
   81 00000016 489A            LDR              R0, =ADDRESS_ALVO
   82 00000018 F8C0 8000       STR              R8, [R0]
   83 0000001C         
   84 0000001C F04F 090F       MOV              R9, #15
   85 00000020 4898            LDR              R0, =ADDRESS_CURRENT
   86 00000022 F8C0 9000       STR              R9, [R0]
   87 00000026         
   88 00000026         ; Display
   89 00000026 F04F 0701       MOV              R7, #1
   90 0000002A 4897            LDR              R0, =DISPLAY_DEZENA
   91 0000002C 6007            STR              R7, [R0]
   92 0000002E         
   93 0000002E F04F 0605       MOV              R6, #5
   94 00000032 4896            LDR              R0, =DISPLAY_UNIDADE
   95 00000034 6006            STR              R6, [R0]
   96 00000036         
   97 00000036 4770            BX               LR
   98 00000038         
   99 00000038         
  100 00000038         ;MainLoop
  101 00000038         ;BL PortJ_Input     ;Chama a subrotina que lê o estado d
                       as chaves e coloca o resultado em R12
  102 00000038         
  103 00000038         ;; verifica SW1
  104 00000038         ;CMP R12, #2_00000010
  105 00000038         ;IT EQ
  106 00000038         ;BLEQ incrementaAlvo
  107 00000038         
  108 00000038         ;; verifica SW2
  109 00000038         ;CMP R12, #2_00000001
  110 00000038         ;IT EQ
  111 00000038         ;BLEQ decrementaAlvo
  112 00000038         
  113 00000038         ;VoltaLoop
  114 00000038         
  115 00000038         ;BL RefreshDisplay
  116 00000038         
  117 00000038         ;;MOV R0, #300
  118 00000038         ;;BL EsperaXms
  119 00000038         ;BL VerificaTemperatura
  120 00000038         
  121 00000038         ;B MainLoop
  122 00000038         
  123 00000038         ;;MOV R0, #500 ; define o tempo de espera



ARM Macro Assembler    Page 4 


  124 00000038         ;;BL EsperaXms
  125 00000038         
  126 00000038         MainLoop
  127 00000038 F7FF FFFE       BL               PortJ_Input ;Chama a subrotina 
                                                            que lê o estado das
                                                             chaves e coloca o 
                                                            resultado em R12
  128 0000003C         
  129 0000003C         ; verifica SW1
  130 0000003C F1BC 0F02       CMP              R12, #2_00000010
  131 00000040 BF08            IT               EQ
  132 00000042 F000 F822       BLEQ             incrementaAlvo
  133 00000046         
  134 00000046         ; verifica SW2
  135 00000046 F1BC 0F01       CMP              R12, #2_00000001
  136 0000004A BF08            IT               EQ
  137 0000004C F000 F82A       BLEQ             decrementaAlvo
  138 00000050         
  139 00000050         VoltaLoop
  140 00000050         
  141 00000050 F000 F873       BL               RefreshDisplay
  142 00000054         
  143 00000054         
  144 00000054 F108 0805       ADD              R8, R8, #5  ; N = 10
  145 00000058 F5B8 7F7A       CMP              R8, #1000   ; significa 1000ms
  146 0000005C BF04            ITT              EQ
  147 0000005E F04F 0800       MOVEQ            R8, #0
  148 00000062 F000 F801       BLEQ             VerificaTemperatura
  149 00000066         
  150 00000066 E7E7            B                MainLoop
  151 00000068         
  152 00000068         ;MOV R0, #500 ; define o tempo de espera
  153 00000068         ;BL EsperaXms
  154 00000068         
  155 00000068         ;Contador
  156 00000068         ;PUSH {LR}
  157 00000068         ;ADD R8, R8, #1
  158 00000068         ;BL RefreshDisplay
  159 00000068         ;POP {LR}
  160 00000068         
  161 00000068         ;BL VerificaTemperatura
  162 00000068         
  163 00000068         ;VerificaTemperatura
  164 00000068         ;MOV R8, #0
  165 00000068         ;ADD R8, R8, #1
  166 00000068         ;CMP R8, #1000
  167 00000068         ;BLT Contador
  168 00000068         ;BEQ Continua
  169 00000068         
  170 00000068         ;Continua
  171 00000068         
  172 00000068         VerificaTemperatura
  173 00000068         ;MOV R0, #1000 ; define o tempo de espera
  174 00000068         ;BL EsperaXms
  175 00000068         
  176 00000068 F04F 0700       MOV              R7, #0
  177 0000006C F04F 000A       MOV              R0, #10
  178 00000070 FB0A F700       MUL              R7, R10, R0
  179 00000074 445F            ADD              R7, R7, R11



ARM Macro Assembler    Page 5 


  180 00000076         
  181 00000076 4883            LDR              R0, =ADDRESS_CURRENT
  182 00000078 6801            LDR              R1, [R0]
  183 0000007A         
  184 0000007A 4881            LDR              R0, =ADDRESS_ALVO
  185 0000007C 6802            LDR              R2, [R0]
  186 0000007E         
  187 0000007E 4291            CMP              R1, R2
  188 00000080 DC2A            BGT              decrementaTempAtual
  189 00000082 DB1C            BLT              incrementaTempAtual
  190 00000084 F000 F8E1       BL               AcendeTodosLeds
  191 00000088         
  192 00000088 E7D6            B                MainLoop
  193 0000008A         
  194 0000008A         
  195 0000008A         incrementaAlvo                       ; ao pressionar o S
                                                            W1
  196 0000008A F000 F8CE       BL               AcendeLed1
  197 0000008E 487C            LDR              R0, =ADDRESS_ALVO
  198 00000090 6801            LDR              R1, [R0]
  199 00000092 F101 0101       ADD              R1, R1, #1
  200 00000096 6001            STR              R1, [R0]
  201 00000098         
  202 00000098 F04F 0232       MOV              R2, #LIMIT_MAX_TEMP_ALVO ; a te
                                                            mperatura alvo não 
                                                            pode ser maior que 
                                                            50
  203 0000009C 4291            CMP              R1, R2
  204 0000009E DBD7            BLT              VoltaLoop
  205 000000A0         
  206 000000A0 6002            STR              R2, [R0]    ; força a temperatu
                                                            ra alvo ficar em 50
                                                            
  207 000000A2 E7D5            B                VoltaLoop
  208 000000A4         
  209 000000A4         
  210 000000A4         decrementaAlvo                       ; ao pressionar o S
                                                            W1
  211 000000A4 F000 F8C9       BL               AcendeLed2
  212 000000A8 4875            LDR              R0, =ADDRESS_ALVO
  213 000000AA 6801            LDR              R1, [R0]
  214 000000AC F1A1 0101       SUB              R1, R1, #1
  215 000000B0 6001            STR              R1, [R0]
  216 000000B2         
  217 000000B2 F04F 0205       MOV              R2, #LIMIT_MIM_TEMP_ALVO ; a te
                                                            mperatura alvo não 
                                                            pode ser maior que 
                                                            5
  218 000000B6 4291            CMP              R1, R2
  219 000000B8 DCCA            BGT              VoltaLoop
  220 000000BA         
  221 000000BA 6002            STR              R2, [R0]    ; força a temperatu
                                                            ra alvo ficar em 5
  222 000000BC E7C8            B                VoltaLoop
  223 000000BE         
  224 000000BE         
  225 000000BE         
  226 000000BE         incrementaTempAtual                  ; ao pressionar o S
                                                            W1



ARM Macro Assembler    Page 6 


  227 000000BE F000 F8B4       BL               AcendeLed1
  228 000000C2 4870            LDR              R0, =ADDRESS_CURRENT
  229 000000C4 6801            LDR              R1, [R0]
  230 000000C6 F101 0101       ADD              R1, R1, #1
  231 000000CA 6001            STR              R1, [R0]
  232 000000CC         
  233 000000CC F04F 0232       MOV              R2, #LIMIT_MAX_TEMP_ALVO ; a te
                                                            mperatura alvo não 
                                                            pode ser maior que 
                                                            50
  234 000000D0 4291            CMP              R1, R2
  235 000000D2 DBB1            BLT              MainLoop
  236 000000D4         
  237 000000D4 6002            STR              R2, [R0]    ; força a temperatu
                                                            ra alvo ficar em 50
                                                            
  238 000000D6 E7AF            B                MainLoop
  239 000000D8         
  240 000000D8         
  241 000000D8         decrementaTempAtual                  ; ao pressionar o S
                                                            W1
  242 000000D8 F000 F8AF       BL               AcendeLed2
  243 000000DC 4869            LDR              R0, =ADDRESS_CURRENT
  244 000000DE 6801            LDR              R1, [R0]
  245 000000E0 F1A1 0101       SUB              R1, R1, #1
  246 000000E4 6001            STR              R1, [R0]
  247 000000E6         
  248 000000E6 F04F 0205       MOV              R2, #LIMIT_MIM_TEMP_ALVO ; a te
                                                            mperatura alvo não 
                                                            pode ser maior que 
                                                            5
  249 000000EA 4291            CMP              R1, R2
  250 000000EC DCA4            BGT              MainLoop
  251 000000EE         
  252 000000EE 6002            STR              R2, [R0]    ; força a temperatu
                                                            ra alvo ficar em 5
  253 000000F0 E7A2            B                MainLoop
  254 000000F2         
  255 000000F2         
  256 000000F2         ;LigaUnidades
  257 000000F2         ;    PUSH {LR}
  258 000000F2         ;
  259 000000F2         ;    MOV  R5, #2_100000      ; PB5 = 1, PB4 = 0
  260 000000F2         ;    BL   PortB_Output       ; escreve em PB4/PB5
  261 000000F2         ;    POP  {LR}
  262 000000F2         ;    BX   LR 
  263 000000F2         
  264 000000F2         ;LigaDezenas
  265 000000F2         ; PUSH {LR}
  266 000000F2         
  267 000000F2         ; MOV  R5, #0      ; PB5 = 1, PB4 = 0
  268 000000F2         ;    BL   PortP_Output
  269 000000F2         
  270 000000F2         ;    MOV  R5, #2_10000       ; PB5 = 1, PB4 = 0
  271 000000F2         ;    BL   PortB_Output       ; escreve em PB4/PB5
  272 000000F2         ;    POP  {LR}
  273 000000F2         ;    BX   LR 
  274 000000F2         
  275 000000F2         



ARM Macro Assembler    Page 7 


  276 000000F2         LigaDisplay
  277 000000F2 B500            PUSH             {LR}
  278 000000F4         
  279 000000F4 F04F 0001       MOV              R0, #1
  280 000000F8 F000 F891       BL               EsperaXms
  281 000000FC         
  282 000000FC         ;MOV  R5, #0     ; PB5 = 1, PB4 = 0
  283 000000FC         ;BL   PortP_Output
  284 000000FC F7FF FFFE       BL               PortB_Output
  285 00000100         
  286 00000100 F04F 0001       MOV              R0, #1
  287 00000104 F000 F88B       BL               EsperaXms
  288 00000108         
  289 00000108 F04F 0500       MOV              R5, #0      ; PB5 = 1, PB4 = 0
  290 0000010C F7FF FFFE       BL               PortB_Output ; escreve em PB4/P
                                                            B5
  291 00000110         
  292 00000110         
  293 00000110 F85D EB04       POP              {LR}
  294 00000114 4770            BX               LR
  295 00000116         
  296 00000116         ;LigaLeds
  297 00000116         ; PUSH {LR}
  298 00000116         ; MOV  R5, #0
  299 00000116         ; BL   PortB_Output
  300 00000116         
  301 00000116         ;    MOV  R5, #2_100000      ; PB5 = 1, PB4 = 0
  302 00000116         ;    BL   PortP_Output       ; escreve em PB4/PB5
  303 00000116         ;    POP  {LR}
  304 00000116         ;    BX   LR 
  305 00000116         
  306 00000116         LigaLeds
  307 00000116 B500            PUSH             {LR}
  308 00000118 F04F 0001       MOV              R0, #1
  309 0000011C F7FF FFFE       BL               SysTick_Wait1ms
  310 00000120         
  311 00000120 F7FF FFFE       BL               PortP_Output
  312 00000124         
  313 00000124 F04F 0001       MOV              R0, #1
  314 00000128 F7FF FFFE       BL               SysTick_Wait1ms
  315 0000012C         
  316 0000012C F04F 0500       MOV              R5, #0
  317 00000130 F7FF FFFE       BL               PortP_Output
  318 00000134         
  319 00000134 F85D EB04       POP              {LR}
  320 00000138 4770            BX               LR
  321 0000013A         
  322 0000013A         
  323 0000013A         RefreshDisplay
  324 0000013A B500            PUSH             {LR}
  325 0000013C         
  326 0000013C 4851            LDR              R0, =ADDRESS_CURRENT
  327 0000013E 6801            LDR              R1, [R0]
  328 00000140         
  329 00000140 F04F 000A       MOV              R0, #10
  330 00000144 FBB1 F2F0       UDIV             R2, R1, R0
  331 00000148         
  332 00000148 FB02 1310       MLS              R3, R2, R0, R1
  333 0000014C 465D            MOV              R5, R11



ARM Macro Assembler    Page 8 


  334 0000014E         
  335 0000014E 484E            LDR              R0, =DISPLAY_DEZENA
  336 00000150 6002            STR              R2, [R0]
  337 00000152         
  338 00000152 484E            LDR              R0, =DISPLAY_UNIDADE
  339 00000154 6003            STR              R3, [R0]
  340 00000156         
  341 00000156         ; Dezenas (PB4) 
  342 00000156 484C            LDR              R0, =DISPLAY_DEZENA
  343 00000158 F000 F816       BL               AtualizaValorDisplay
  344 0000015C F04F 0510       MOV              R5, #2_10000
  345 00000160 F7FF FFC7       BL               LigaDisplay
  346 00000164         
  347 00000164         ; Unidades (PB5) 
  348 00000164 4849            LDR              R0, =DISPLAY_UNIDADE
  349 00000166 F000 F80F       BL               AtualizaValorDisplay
  350 0000016A F04F 0520       MOV              R5, #2_100000
  351 0000016E F7FF FFC0       BL               LigaDisplay
  352 00000172         
  353 00000172         ; Leds
  354 00000172 4843            LDR              R0, =ADDRESS_ALVO
  355 00000174 6804            LDR              R4, [R0]
  356 00000176 F7FF FFFE       BL               PortAQ_Output
  357 0000017A         
  358 0000017A F04F 0520       MOV              R5, #2_100000
  359 0000017E F7FF FFCA       BL               LigaLeds
  360 00000182         
  361 00000182 F85D EB04       POP              {LR}
  362 00000186 4770            BX               LR
  363 00000188         
  364 00000188         
  365 00000188         AtualizaValorDisplay
  366 00000188 6801            LDR              R1, [R0]    ; endereço do valor
                                                             da dezena/unidade
  367 0000018A         
  368 0000018A F04F 0700       MOV              R7, #0
  369 0000018E B500            PUSH             {LR}
  370 00000190         
  371 00000190 42B9            CMP              R1, R7
  372 00000192 BF04            ITT              EQ
  373 00000194 243F            MOVEQ            R4, #DIGITO_0
  374 00000196 F7FF FFFE       BLEQ             PortAQ_Output
  375 0000019A         
  376 0000019A F107 0701       ADD              R7, #1
  377 0000019E 42B9            CMP              R1, R7
  378 000001A0 BF04            ITT              EQ
  379 000001A2 2406            MOVEQ            R4, #DIGITO_1
  380 000001A4 F7FF FFFE       BLEQ             PortAQ_Output
  381 000001A8         
  382 000001A8 F107 0701       ADD              R7, #1
  383 000001AC 42B9            CMP              R1, R7
  384 000001AE BF04            ITT              EQ
  385 000001B0 245B            MOVEQ            R4, #DIGITO_2
  386 000001B2 F7FF FFFE       BLEQ             PortAQ_Output
  387 000001B6         
  388 000001B6 F107 0701       ADD              R7, #1
  389 000001BA 42B9            CMP              R1, R7
  390 000001BC BF04            ITT              EQ
  391 000001BE 244F            MOVEQ            R4, #DIGITO_3



ARM Macro Assembler    Page 9 


  392 000001C0 F7FF FFFE       BLEQ             PortAQ_Output
  393 000001C4         
  394 000001C4 F107 0701       ADD              R7, #1
  395 000001C8 42B9            CMP              R1, R7
  396 000001CA BF04            ITT              EQ
  397 000001CC 2466            MOVEQ            R4, #DIGITO_4
  398 000001CE F7FF FFFE       BLEQ             PortAQ_Output
  399 000001D2         
  400 000001D2 F107 0701       ADD              R7, #1
  401 000001D6 42B9            CMP              R1, R7
  402 000001D8 BF04            ITT              EQ
  403 000001DA 246D            MOVEQ            R4, #DIGITO_5
  404 000001DC F7FF FFFE       BLEQ             PortAQ_Output
  405 000001E0         
  406 000001E0 F107 0701       ADD              R7, #1
  407 000001E4 42B9            CMP              R1, R7
  408 000001E6 BF04            ITT              EQ
  409 000001E8 247D            MOVEQ            R4, #DIGITO_6
  410 000001EA F7FF FFFE       BLEQ             PortAQ_Output
  411 000001EE         
  412 000001EE F107 0701       ADD              R7, #1
  413 000001F2 42B9            CMP              R1, R7
  414 000001F4 BF04            ITT              EQ
  415 000001F6 2407            MOVEQ            R4, #DIGITO_7
  416 000001F8 F7FF FFFE       BLEQ             PortAQ_Output
  417 000001FC         
  418 000001FC F107 0701       ADD              R7, #1
  419 00000200 42B9            CMP              R1, R7
  420 00000202 BF04            ITT              EQ
  421 00000204 247F            MOVEQ            R4, #DIGITO_8
  422 00000206 F7FF FFFE       BLEQ             PortAQ_Output
  423 0000020A         
  424 0000020A F107 0701       ADD              R7, #1
  425 0000020E 42B9            CMP              R1, R7
  426 00000210 BF04            ITT              EQ
  427 00000212 246F            MOVEQ            R4, #DIGITO_9
  428 00000214 F7FF FFFE       BLEQ             PortAQ_Output
  429 00000218         
  430 00000218 F85D EB04       POP              {LR}
  431 0000021C 4770            BX               LR
  432 0000021E         
  433 0000021E         
  434 0000021E         ; usa o R0 como valor de espera
  435 0000021E         EsperaXms
  436 0000021E B500            PUSH             {LR}
  437 00000220 F7FF FFFE       BL               SysTick_Wait1ms
  438 00000224 F85D EB04       POP              {LR}
  439 00000228         
  440 00000228 4770            BX               LR
  441 0000022A         
  442 0000022A         
  443 0000022A         AcendeLed1
  444 0000022A B500            PUSH             {LR}
  445 0000022C F04F 0002       MOV              R0, #2_00000010 ; Acende o prim
                                                            eiro LED apenas
  446 00000230 F7FF FFFE       BL               PortN_Output
  447 00000234 F85D EB04       POP              {LR}
  448 00000238         
  449 00000238 4770            BX               LR



ARM Macro Assembler    Page 10 


  450 0000023A         
  451 0000023A         AcendeLed2
  452 0000023A B500            PUSH             {LR}
  453 0000023C F04F 0001       MOV              R0, #2_00000001 ; Acende o segu
                                                            ndo LED apenas
  454 00000240 F7FF FFFE       BL               PortN_Output
  455 00000244 F85D EB04       POP              {LR}
  456 00000248         
  457 00000248 4770            BX               LR
  458 0000024A         
  459 0000024A         AcendeTodosLeds
  460 0000024A B500            PUSH             {LR}
  461 0000024C F04F 0003       MOV              R0, #2_00000011 ; Acende os doi
                                                            s leds
  462 00000250 F7FF FFFE       BL               PortN_Output
  463 00000254 F85D EB04       POP              {LR}
  464 00000258         
  465 00000258 4770            BX               LR
  466 0000025A         
  467 0000025A         
  468 0000025A         ; Funcao para ativar o transistor de controle dos leds d
                       a PAT
  469 0000025A         AtivaTransistorP
  470 0000025A B500            PUSH             {LR}
  471 0000025C F04F 000A       MOV              R0, #10
  472 00000260 F7FF FFDD       BL               EsperaXms
  473 00000264         
  474 00000264 F7FF FFFE       BL               PortP_Output
  475 00000268         
  476 00000268 F04F 000A       MOV              R0, #10
  477 0000026C F7FF FFD7       BL               EsperaXms
  478 00000270         
  479 00000270 F04F 0500       MOV              R5, #0
  480 00000274 F7FF FFFE       BL               PortP_Output
  481 00000278         
  482 00000278 F85D EB04       POP              {LR}
  483 0000027C 4770            BX               LR          ;return
  484 0000027E         
  485 0000027E         
  486 0000027E         
  487 0000027E         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  488 0000027E         ; Fim do Arquivo
  489 0000027E         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  490 0000027E 00 00           ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  491 00000280                 END                          ;Fim do arquivo
              20000404 
              20000400 
              20000600 
              20000604 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\rafa1\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE



ARM Macro Assembler    Page 11 


TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 36 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 47 in file main.s
   Uses
      None
Comment: .text unused
AcendeLed1 0000022A

Symbol: AcendeLed1
   Definitions
      At line 443 in file main.s
   Uses
      At line 196 in file main.s
      At line 227 in file main.s

AcendeLed2 0000023A

Symbol: AcendeLed2
   Definitions
      At line 451 in file main.s
   Uses
      At line 211 in file main.s
      At line 242 in file main.s

AcendeTodosLeds 0000024A

Symbol: AcendeTodosLeds
   Definitions
      At line 459 in file main.s
   Uses
      At line 190 in file main.s
Comment: AcendeTodosLeds used once
AtivaTransistorP 0000025A

Symbol: AtivaTransistorP
   Definitions
      At line 469 in file main.s
   Uses
      None
Comment: AtivaTransistorP unused
AtualizaValorDisplay 00000188

Symbol: AtualizaValorDisplay
   Definitions
      At line 365 in file main.s
   Uses
      At line 343 in file main.s
      At line 349 in file main.s

EsperaXms 0000021E

Symbol: EsperaXms
   Definitions
      At line 435 in file main.s
   Uses
      At line 280 in file main.s
      At line 287 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 472 in file main.s
      At line 477 in file main.s

LigaDisplay 000000F2

Symbol: LigaDisplay
   Definitions
      At line 276 in file main.s
   Uses
      At line 345 in file main.s
      At line 351 in file main.s

LigaLeds 00000116

Symbol: LigaLeds
   Definitions
      At line 306 in file main.s
   Uses
      At line 359 in file main.s
Comment: LigaLeds used once
MainLoop 00000038

Symbol: MainLoop
   Definitions
      At line 126 in file main.s
   Uses
      At line 75 in file main.s
      At line 150 in file main.s
      At line 192 in file main.s
      At line 235 in file main.s
      At line 238 in file main.s
      At line 250 in file main.s
      At line 253 in file main.s

RefreshDisplay 0000013A

Symbol: RefreshDisplay
   Definitions
      At line 323 in file main.s
   Uses
      At line 141 in file main.s
Comment: RefreshDisplay used once
Start 00000000

Symbol: Start
   Definitions
      At line 69 in file main.s
   Uses
      At line 50 in file main.s
Comment: Start used once
VerificaTemperatura 00000068

Symbol: VerificaTemperatura
   Definitions
      At line 172 in file main.s
   Uses
      At line 148 in file main.s
Comment: VerificaTemperatura used once
VoltaLoop 00000050



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: VoltaLoop
   Definitions
      At line 139 in file main.s
   Uses
      At line 204 in file main.s
      At line 207 in file main.s
      At line 219 in file main.s
      At line 222 in file main.s

decrementaAlvo 000000A4

Symbol: decrementaAlvo
   Definitions
      At line 210 in file main.s
   Uses
      At line 137 in file main.s
Comment: decrementaAlvo used once
decrementaTempAtual 000000D8

Symbol: decrementaTempAtual
   Definitions
      At line 241 in file main.s
   Uses
      At line 188 in file main.s
Comment: decrementaTempAtual used once
incrementaAlvo 0000008A

Symbol: incrementaAlvo
   Definitions
      At line 195 in file main.s
   Uses
      At line 132 in file main.s
Comment: incrementaAlvo used once
incrementaTempAtual 000000BE

Symbol: incrementaTempAtual
   Definitions
      At line 226 in file main.s
   Uses
      At line 189 in file main.s
Comment: incrementaTempAtual used once
inicializaMemoria 00000012

Symbol: inicializaMemoria
   Definitions
      At line 77 in file main.s
   Uses
      At line 73 in file main.s
Comment: inicializaMemoria used once
19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ADDRESS_ALVO 20000404

Symbol: ADDRESS_ALVO
   Definitions
      At line 28 in file main.s
   Uses
      At line 81 in file main.s
      At line 184 in file main.s
      At line 197 in file main.s
      At line 212 in file main.s
      At line 354 in file main.s

ADDRESS_CURRENT 20000400

Symbol: ADDRESS_CURRENT
   Definitions
      At line 29 in file main.s
   Uses
      At line 85 in file main.s
      At line 181 in file main.s
      At line 228 in file main.s
      At line 243 in file main.s
      At line 326 in file main.s

DIGITO_0 0000003F

Symbol: DIGITO_0
   Definitions
      At line 16 in file main.s
   Uses
      At line 373 in file main.s
Comment: DIGITO_0 used once
DIGITO_1 00000006

Symbol: DIGITO_1
   Definitions
      At line 17 in file main.s
   Uses
      At line 379 in file main.s
Comment: DIGITO_1 used once
DIGITO_2 0000005B

Symbol: DIGITO_2
   Definitions
      At line 18 in file main.s
   Uses
      At line 385 in file main.s
Comment: DIGITO_2 used once
DIGITO_3 0000004F

Symbol: DIGITO_3
   Definitions
      At line 19 in file main.s
   Uses
      At line 391 in file main.s
Comment: DIGITO_3 used once
DIGITO_4 00000066

Symbol: DIGITO_4



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 20 in file main.s
   Uses
      At line 397 in file main.s
Comment: DIGITO_4 used once
DIGITO_5 0000006D

Symbol: DIGITO_5
   Definitions
      At line 21 in file main.s
   Uses
      At line 403 in file main.s
Comment: DIGITO_5 used once
DIGITO_6 0000007D

Symbol: DIGITO_6
   Definitions
      At line 22 in file main.s
   Uses
      At line 409 in file main.s
Comment: DIGITO_6 used once
DIGITO_7 00000007

Symbol: DIGITO_7
   Definitions
      At line 23 in file main.s
   Uses
      At line 415 in file main.s
Comment: DIGITO_7 used once
DIGITO_8 0000007F

Symbol: DIGITO_8
   Definitions
      At line 24 in file main.s
   Uses
      At line 421 in file main.s
Comment: DIGITO_8 used once
DIGITO_9 0000006F

Symbol: DIGITO_9
   Definitions
      At line 25 in file main.s
   Uses
      At line 427 in file main.s
Comment: DIGITO_9 used once
DISPLAY_DEZENA 20000600

Symbol: DISPLAY_DEZENA
   Definitions
      At line 30 in file main.s
   Uses
      At line 90 in file main.s
      At line 335 in file main.s
      At line 342 in file main.s

DISPLAY_UNIDADE 20000604

Symbol: DISPLAY_UNIDADE
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 31 in file main.s
   Uses
      At line 94 in file main.s
      At line 338 in file main.s
      At line 348 in file main.s

LIMIT_MAX_TEMP_ALVO 00000032

Symbol: LIMIT_MAX_TEMP_ALVO
   Definitions
      At line 27 in file main.s
   Uses
      At line 202 in file main.s
      At line 233 in file main.s

LIMIT_MIM_TEMP_ALVO 00000005

Symbol: LIMIT_MIM_TEMP_ALVO
   Definitions
      At line 26 in file main.s
   Uses
      At line 217 in file main.s
      At line 248 in file main.s

16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 59 in file main.s
   Uses
      At line 72 in file main.s
Comment: GPIO_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 56 in file main.s
   Uses
      At line 70 in file main.s
Comment: PLL_Init used once
PortAQ_Output 00000000

Symbol: PortAQ_Output
   Definitions
      At line 60 in file main.s
   Uses
      At line 356 in file main.s
      At line 374 in file main.s
      At line 380 in file main.s
      At line 386 in file main.s
      At line 392 in file main.s
      At line 398 in file main.s
      At line 404 in file main.s
      At line 410 in file main.s
      At line 416 in file main.s
      At line 422 in file main.s
      At line 428 in file main.s

PortB_Output 00000000

Symbol: PortB_Output
   Definitions
      At line 61 in file main.s
   Uses
      At line 284 in file main.s
      At line 290 in file main.s

PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 62 in file main.s
   Uses
      At line 127 in file main.s
Comment: PortJ_Input used once
PortN_Output 00000000

Symbol: PortN_Output
   Definitions
      At line 63 in file main.s
   Uses
      At line 446 in file main.s
      At line 454 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 462 in file main.s

PortP_Output 00000000

Symbol: PortP_Output
   Definitions
      At line 64 in file main.s
   Uses
      At line 311 in file main.s
      At line 317 in file main.s
      At line 474 in file main.s
      At line 480 in file main.s

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 57 in file main.s
   Uses
      At line 71 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 58 in file main.s
   Uses
      At line 309 in file main.s
      At line 314 in file main.s
      At line 437 in file main.s

9 symbols
381 symbols in table
